swagger: '2.0'
info:
  title: Persons API
  description: Get information about people at OSU.
  version: v2
  license:
    name: GNU Affero General Public License Version 3
    url: http://www.gnu.org/licenses/agpl-3.0.en.html
  contact:
    name: IS Data Architecture Team
    url: https://is.oregonstate.edu/data-architecture
    email: isdataarchitecture@oregonstate.edu
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/persons-api
host: api.oregonstate.edu
schemes:
  - https
basePath: /v2
produces:
  - application/json
consumes:
  - application/json
security:
  - OAuth2:
    - full
paths:
  /persons:
    post:
      description: Create a person
      tags:
        - persons
      operationId: postPerson
      parameters:
        - name: personBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/PersonPostBody'
      responses:
        '202':
          description: The backend data source needs to do additional processing 
            with the new person record. Person record accepted but not yet created.
          schema:
            $ref: '#/definitions/PersonResult'
        '400':
          $ref: '#/responses/400'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
  /persons/{osuId}:
    get:
      description: Get general person information
      tags:
        - persons
      operationId: getPersonById
      parameters:
        - $ref: '#/parameters/osuId'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PersonResult'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
  /persons/{osuId}/jobs:
    get:
      description: Get jobs associated with a person
      tags:
        - jobs
      operationId: getJobs
      parameters:
        - $ref: '#/parameters/osuId'
        - name: filter[positionNumber]
          in: query
          type: string
          required: false
          description: Filter by position ID.
        - name: filter[suffix]
          in: query
          type: string
          required: false
          description: >
            Filter by suffix. The suffix is used to differentiate multiple jobs
            that share the same position number for a given person.
        - name: filter[status]
          in: query
          type: string
          enum: &jobStatusEnums
            - Active
            - Leave without pay but with benefits
            - Leave without pay and benefits
            - Leave with full pay and benefits
            - Leave with partial pay and benefits
            - Terminated
          required: false
          description: Filter by the status of the job
        - name: filter[campusId]
          in: query
          type: string
          required: false
          enum: [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 33D, 33E, 33F, 33G, 34A, 34B, 34C, 34D, 34E, 34F, 34G, 34H, 34I, 35A, 35B, 36A, 36B, 36C, 36D, 36E, 36F, 36G, 36H, 36I, 37, 40, 41, 42, 43, 44, 45, 46, 29E, 29F, 29G, 30A, 30B, 30C, 30D, 30E, 30F, 30G, 30H, 30I, 30J, 30K, 30L, 31A, 31B, 31C, 31D, 31E, 31F, 31G, 31H, 32A, 32B, 32C, 32D, 33A, 33B, 33C, 24M, 24N, 24O, 24P, 24Q, 24R, 24S, 25A, 25B, 25C, 25D, 25E, 26A, 26B, 26C, 26D, 26E, 27A, 27B, 27C, 27D, 27E, 28A, 28B, 28C, 29A, 29B, 29C, 29D, 21B, 21C, 21D, 21E, 22A, 22B, 22C, 22D, 22E, 22F, 22G, 22H, 22I, 23A, 23B, 23C, 23D, 23E, 23F, 24A, 24B, 24C, 24D, 24E, 24F, 24G, 24H, 24I, 24J, 24K, 24L, 15E, 15F, 15G, 15H, 15I, 15J, 16A, 16B, 16C, 17A, 17B, 18A, 18B, 18C, 18D, 18E, 19A, 19B, 19C, 20A, 20B, 20C, 20D, 20E, 20F, 20G, 20H, 20I, 21A, 10F, 10G, 10H, 10I, 10J, 10K, 11A, 11B, 11C, 12A, 12B, 12C, 12D, 12E, 12F, 12G, 12H, 12I, 13A, 13B, 13C, 13D, 13E, 14A, 14B, 15A, 15B, 15C, 15D, 01A, 01B, 01C, 01D, 01E, 01F, 01G, 01H, 01I, 02A, 02B, 02C, 03A, 03B, 03C, 03D, 03E, 03F, 03G, 03H, 03I, 03J, 03K, 03L, 04A, 04B, 04C, 04D, 04E, 05A, 05B, 05C, 05D, 05E, 05F, 05G, 05H, 06A, 06B, 06C, 06D, 06E, 06F, 06G, 06H, 06I, 07A, 08A, 08B, 08C, 09A, 09B, 09C, 10A, 10B, 10C, 10D, 10E, 87, 88, 89, 16D, 34J, 20J, 03M, 02D, 02E, 07B, 13F, 25F, 06J, 05I, 03N, 34K, 20K, 34L, 24T, 10L, 09D, 09E, 27F, 20L, 37A, 27G, 22J]
          description: |
            Filter results by campus ID. Common campus IDs:
            - `02A` - Corvallis
            - `09A` - Bend
            - `21B` - Newport
            - `31E` - Eastern
            - `26C` - Portland
        - $ref: '#/parameters/employmentType'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/JobSetResult'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
    post:
      description: Create a job record for a person
      tags:
        - jobs
      operationId: postJob
      parameters:
        - name: jobBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/JobPostBody'
        - $ref: '#/parameters/osuId'
      responses:
        '202':
          description: The backend data source needs to do additional processing 
            with the new job record. Job record accepted but not yet created.
          schema:
            $ref: '#/definitions/JobResult'
        '400':
          $ref: '#/responses/400'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
  /persons/{osuId}/jobs/{jobId}:
    get:
      description: Get a specific job associated with a person
      tags:
        - jobs
      operationId: getJobById
      parameters:
        - $ref: '#/parameters/osuId'
        - $ref: '#/parameters/jobId'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/JobResult'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
    patch:
      description: Update a job record for a person
      tags: 
        - jobs
      operationId: patchJobById
      parameters:
        - name: jobBody
          in: body
          description: patch body for a job
          required: true
          schema:
            $ref: '#/definitions/JobPatchBody'
        - $ref: '#/parameters/osuId'
        - $ref: '#/parameters/jobId'
      responses:
        '202':
          description: The backend data source needs to do additional processing 
            with the updated job record. Job record accepted but not yet updated.
          schema:
            $ref: '#/definitions/JobResult'
        '400':
          $ref: '#/responses/400'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
  /persons/{osuId}/ssn:
    post:
      description: Create a person's SSN
      tags:
        - ssn
      operationId: postSsn
      parameters:
        - name: ssnBody
          in: body
          description: SSN post body
          required: true
          schema:
            $ref: '#/definitions/SsnPostBody'
        - $ref: '#/parameters/osuId'
      responses:
        '204':
          description: 'SSN accepted'
        '400':
          $ref: '#/responses/400'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
  /persons/{osuId}/images:
    get:
      description: Get a person's image
      tags:
        - images
      operationId: getImages
      produces:
        - image/jpeg
        - application/json
      parameters:
        - $ref: '#/parameters/osuId'
        - in: query
          name: width
          maximum: 2000
          minimum: 1
          default: 100
          description: Resizes image to a pixel value for width while keeping original aspect ratio
          required: false
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            type: file
        '400':
          $ref: '#/responses/400'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
  /persons/{osuId}/meal-plans:
    get:
      description: Get meal plans for a person
      tags:
        - meal-plans
      operationId: getMealPlans
      parameters:
        - $ref: '#/parameters/osuId'
        - name: filter[balance][gt]
          in: query
          type: number
          format: float
          required: false
          description: Filter results based on the remaining balance.
        - name: filter[balance][gte]
          in: query
          type: number
          format: float
          required: false
          description: Filter results based on the remaining balance.
        - name: filter[lastUsedDateTime][gt]
          in: query
          type: string
          format: date-time
          required: false
          description: Filter results based on the last date and time the meal-plan was used.
        - name: filter[lastUsedDateTime][gte]
          in: query
          type: string
          format: date-time
          required: false
          description: Filter results based on the last date and time the meal-plan was used.
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/MealPlanSetResult'
        '400':
          $ref: '#/responses/400'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
  /persons/{osuId}/meal-plans/{mealPlanId}:
    get:
      description: Get a specific meal plan for a person
      tags:
        - meal-plans
      operationId: getMealPlanById
      parameters:
        - $ref: '#/parameters/osuId'
        - $ref: '#/parameters/mealPlanId'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/MealPlanResult'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
  /persons/{osuId}/addresses:
    get:
      description: Get addresses for a person
      tags:
        - addresses
      operationId: getAddresses
      parameters:
        - $ref: '#/parameters/osuId'
        - name: filter[city]
          in: query
          type: string
          required: false
          description: Filter results by city.
        - name: filter[county]
          in: query
          type: string
          required: false
          description: Filter results by county.
        - name: filter[stateCode]
          in: query
          type: string
          required: false
          enum: &stateCodeEnums [DE, NJ, PA, DC, NY, CA, VA, NC, TX, FL, HI, WV, MT, GA, MD, OH, IN, AK, AL, AR, AZ, CO, CT, IA, ID, IL, KS, KY, LA, MA, ME, MI, MN, MO, MS, ND, NE, NH, NM, NV, OK, OR, RI, SC, SD, TN, UT, VT, WA, WI, WY, VI, TT, PR, GU, CZ, AS, BC, NT, AB, ON, SK, NB, NF, NS, PE, PQ, MP, FM, MH, PW, MB, YT, AP, AE, AA, FC, FR, NU, BY, ENG]
          description: Filter results by state code.
        - name: filter[nationCode]
          in: query
          type: string
          required: false
          enum: &nationCodeEnums [FPL, ARE, ARW, KSA, QSG, ESL, GES, CSD, KSY, HTT, ETG, JUY, JVE, KYD, AZM, FAL, GAD, JAR, HBS, KBH, PBT, ABI, QBU, LCA, BCG, OTW, OCN, ICR, GDK, ISV, AET, NPF, BGA, SGL, HHT, GIS, KIQ, HJM, AKE, DLS, CLY, GMC, HMQ, AMZ, NPG, ENE, MNZ, JPY, HAI, HAG, EBJ, FBY, MCX, NCK, JFK, NGU, HLC, FAM, FMD, FEE, FLT, OMO, FHR, DNA, JGY, GDE, HPM, QVN, QBN, CEH, RHM, HKN, NNR, NPN, BST, NTK, FMK, FSR, FTX, FTI, QMM, AER, FBO, FAJ, NSB, FUA, FRU, FGE, FBA, GAT, FYU, LBM, RBV, BCF, MCC, HCU, HDO, QTP, CEG, JGF, GGR, HGD, EGN, OHK, KIR, KIL, KJO, KLB, GLU, AMG, GMT, AYO, IMX, OMN, GNL, NNC, ENG, OKP, PPK, JPE, KQA, FRO, ESN, ADJ, DZA, HVC, KOM, JSR, ATZ, CTN, NTV, GGB, NVU, NWF, FBG, QID, GIT, GPT, AZW, FSK, BCM, DBW, EGW, EML, FHU, FKZ, GCH, GLI, GSM, HBB, HVG, IGT, KAE, KKW, NFJ, QKH, QPH, NUM, KGZ, FKK, HBL, COD, ASO, PLK, GSE, DSZ, QTH, KTR, GVA, NWS, BZR, PAF, CDZ, BAO, MAU, PBD, GBE, IBZ, JBO, JBR, PIO, BTD, JCL, JCO, ECV, KCY, JEC, BGQ, GFI, GFR, EGM, HGP, IHN, GIE, ECI, OJP, OKR, ELR, AMW, CMA, AMU, QMY, PNP, INI, GNO, IPA, LUS, RAQ, HAW, EBF, HKY, AKM, HDM, GFO, RTF, FKG, FUZ, FLV, PMV, FSI, HAN, EGH, PIN, EMR, AUG, KYE, NTO, GGI, NKI, HMS, NNU, ASC, HTC, FEZ, FMW, NNF, QLA, IAN, KWE, FTM, HMF, FKV]
          description: Filter results by nation code.
        - $ref: '#/parameters/addressType'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AddressSetResult'
        '400':
          $ref: '#/responses/400'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
    post:
      description: Create address for a person
      tags:
        - addresses
      operationId: postAddress
      parameters:
        - name: addressBody
          in: body
          description: Post body for new address
          required: true
          schema:
            $ref: '#/definitions/AddressPostBody'
        - $ref: '#/parameters/osuId'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AddressResult'
        '400':
          $ref: '#/responses/400'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
  /persons/{osuId}/phones:
    get:
      description: Get phone numbers for a person
      tags:
        - phones
      operationId: getPhones
      parameters:
        - $ref: '#/parameters/osuId'
        - $ref: '#/parameters/addressType'
        - $ref: '#/parameters/phoneType'
        - name: filter[primaryInd]
          in: query
          type: boolean
          required: false
          description: Filter on primary or non-primary phone numbers
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PhoneSetResult'
        '400':
          $ref: '#/responses/400'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
    post:
      description: Create phone number for a person
      tags:
        - phones
      operationId: postPhone
      parameters:
        - name: phoneBody
          in: body
          description: Post body for the new phone
          required: true
          schema:
            $ref: '#/definitions/PhonePostBody'
        - $ref: '#/parameters/osuId'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PhoneResult'
        '400':
          $ref: '#/responses/400'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
  /persons/{osuId}/emails:
    get:
      description: Get emails for a person
      tags:
        - emails
      operationId: getEmails
      parameters:
        - $ref: '#/parameters/osuId'
        - name: filter[emailType]
          in: query
          type: array
          items:
            type: string
            collectionFormat: csv
          required: false
          enum: &emailTypeEnums
            - ONID
            - STU
            - VEND
            - VWEB
            - EMPL
            - VPAY
            - EMER
          description: |
            Type of email
            - `ONID` - Student
            - `STU` - Non-directory Student
            - `VEND` - Vendor
            - `VWEB` - Vendor
            - `EMPL` - Employee
            - `VPAY` - Vendor Pay
            - `EMER` - Emergency Contact Persons Email for Student
        - name: filter[preferredInd]
          in: query
          type: boolean
          description: Filter on preferred email addresses
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/EmailSetResult'
        '400':
          $ref: '#/responses/400'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
parameters:
  osuId:
    name: osuId
    in: path
    required: true
    description: OSU ID of a person
    type: string
    pattern: '^\d{9}$'
  jobId:
    name: jobId
    in: path
    description: ID of the specific job to be updated
    required: true
    type: string
  mealPlanId:
    name: mealPlanId
    in: path
    description: ID of meal plan
    required: true
    type: string
  employmentType:
    name: filter[employmentType]
    in: query
    description: Filter based on the jobs type of employment
    required: false
    type: array
    enum: &employmentTypeEnums
      - student
      - graduate
    items:
      collectionFormat: csv
      type: string
  addressType:
    name: filter[addressType]
    in: query
    type: string
    required: false
    enum: &addressTypeEnums [PA, RN, RB, RE, RK, VO, VP, XX, CM, DM, EO, RH, PR, MA, SV, JA]
    description: |
      Filter by address type. Common address types and their description:
      - `PA` - Student Alternate Contact
      - `RN` - Geographic Origin-First Admit
      - `RB` - Research Billing
      - `RE` - Billing Address
      - `RK` - Financial Aid Address
      - `VO` - Vendor Order
      - `VP` - Vendor Payment
      - `XX` - Reserved for TGRFEED Use Only
      - `CM` - Current Mailing
      - `DM` - Department (US Mail)
      - `EO` - Employee Office (Directory)
      - `RH` - Residence Hall
      - `PR` - Payroll W2 Address
      - `MA` - Reserved for SRTLOAD Use Only
      - `SV` - International -SEVIS
      - `JA` - Job Application (HR use only)
  phoneType:
    name: filter[phoneType]
    in: query
    type: string
    required: false
    enum: &phoneTypeEnums [PA, RN, RB, MG, RE, RK, VO, VP, VF, CM, EO, RH, EF, MP]
    description: |
      Filter by phone type. Phone types and their descriptions:
      - `PA` - Student Alternate Contact
      - `RN` - Geographic Origin-First Admit
      - `RB` - Research Billing
      - `MG` - Mailing Address (Grades)
      - `RE` - Billing Phone
      - `RK` - Financial Aid Address
      - `VO` - Vendor Order
      - `VP` - Vendor Payment
      - `VF` - Vendor Fax
      - `CM` - Current
      - `EO` - Employee Office (Directory)
      - `RH` - Residence Hall
      - `EF` - Employee Office Fax
      - `MP` - Mobile Phone
responses:
  '400':
    description: Bad request
    schema:
      $ref: '#/definitions/ErrorResult'
  '404':
    description: Resource not found
    schema:
      $ref: '#/definitions/ErrorResult'
  '409':
    description: Type or ID conflict
    schema:
      $ref: '#/definitions/ErrorResult'
  '500':
    description: Internal server error
    schema:
      $ref: '#/definitions/ErrorResult'
securityDefinitions:
  OAuth2:
    type: oauth2
    flow: application
    tokenUrl: https://api.oregonstate.edu/oauth2/token
    scopes:
      full: Full access to the API
definitions:
  PersonType:
    type: string
    enum: [person]
  JobType:
    type: string
    enum: [job]
  SsnType:
    type: string
    enum: [ssn]
  MealPlanType:
    type: string
    enum: [meal-plans]
  AddressType:
    type: string
    enum: [addresses]
  PhoneType:
    type: string
    enum: [phones]
  EmailType:
    type: string
    enum: [emails]
  PersonPostAttributes:
    type: object
    required:
      - firstName
      - lastName
      - birthDate
      - sex
    additionalProperties: false
    properties:
      firstName:
        type: string
        description: First name of person
        example: John
      lastName:
        type: string
        description: Last name of person
        example: Smith
      middleName:
        type: string
        description: Middle name of person
        example: Adam
      birthDate:
        type: string
        format: date
        description: Birthday of person
        example: '1970-1-21'
      citizen:
        type: object
        properties:
          code:
            type: string
            enum: [FN, N, R, S, C]
            description: |
              Person's citizen code
              - `FN` - Foreign National
              - `N` - Non Resident Alien
              - `R` - Resident Alien
              - `S` - Substantial Presence Alien
              - `C` - Citizen
          description:
            type: string
            description: Description field for the code
      sex:
        type: string
        enum: [M, F, N]
        description: |
          Person's sex code
          - `M` - Male
          - `F` - Female
          - `N` - Non-specified
  PersonAttributes:
    type: object
    properties:
      displayFirstName:
        type: string
        description: Preferred first name
        example: John
      displayMiddleName:
        type: string
        description: Preferred middle name
        example: Adam
      displayLastName:
        type: string
        description: Preferred last name
        example: Smith
      onid:
        type: string
        description: ONID username
        example: smithj
      isConfidential:
        type: boolean
        description: If true, the person has opted in to being required to be listed as confidential
      isCurrentStudent:
        type: boolean
        description: True if person is a current student
      isCurrentEmployee:
        type: boolean
        description: True if person is a current employee
      employeeStatus:
        type: object
        properties:
          code:
            type: string
            enum: [A, B, L, F, P, T]
            description: |
              The status of the employee:
              - `A` - Active
              - `B` - Leave without pay and with benefits
              - `L` - Leave without pay and without benefits
              - `F` - Leave with pay and with benefits
              - `P` - Leave with partial pay and with benefits
              - `T` - Terminated
          description:
            type: string
            description: Description of employee status code
            example: Active
      ssnStatus:
        type: string
        enum:
          - vault
          - valid
          - invalid
        description: SSN status
  PersonResource:
    type: object
    properties:
      id:
        type: string
        description: OSU ID of a person
        pattern: '^\d{9}$'
      type:
        $ref: '#/definitions/PersonType'
      links:
        $ref: '#/definitions/SelfLink'
      attributes:
        allOf:
          - $ref: '#/definitions/PersonPostAttributes'
          - $ref: '#/definitions/PersonAttributes'
  PersonResult:
    type: object
    properties:
      links:
        $ref: '#/definitions/SelfLink'
      data:
        $ref: '#/definitions/PersonResource'
  PersonPostBody:
    type: object
    required:
      - data
    additionalProperties: false
    properties:
      data:
        type: object
        required:
          - type
          - attributes
        additionalProperties: false
        properties:
          type:
            $ref: '#/definitions/PersonType'
          attributes:
            $ref: '#/definitions/PersonPostAttributes'
  SupervisorAttributes:
    type: object
    required:
      - osuId
      - positionNumber
    additionalProperties: false
    properties:
      osuId:
        type: string
        description: OSU ID of the supervisor for the job.
        pattern: '^\d{9}$'
      firstName:
        type: string
        description: First name of the supervisor for the job.
        example: John
      lastName:
        type: string
        description: Last name of the supervisor for the job.
        example: Smith
      email:
        type: string
        format: email
        description: The primary email of the supervisor for the job.
        example: john.smith@example.com
      positionNumber:
        type: string
        description: Position number for the supervisor.
        example: C12345
      suffix:
        type: string
        description: Suffix of the supervisor.
  JobPostRequired:
    type: object
    required:
      - positionNumber
      - employmentType
      - beginDate
      - supervisor
      - effectiveDate
  JobAttributes:
    type: object
    additionalProperties: false
    properties:
      suffix:
        type: string
        description: >
          Used to uniquely identify a job record for persons who have
          multiple jobs that share the same position number.
          For updating existing jobs, this field is required.
      positionNumber:
        type: string
        description: Identifies a position.
        example: C12345
      employmentType:
        type: string
        enum: *employmentTypeEnums
        description: Type of employment.
      effectiveDate:
        type: string
        format: date
        description: The date this job assignment is effective.
        example: '1970-1-21'
      beginDate:
        type: string
        format: date
        description: Begin date of job.
        example: '1970-1-21'
      endDate:
        type: string
        format: date
        description: End date of job.
        example: '1971-2-15'
      accruesLeaveInd:
        type: boolean
        description: If true, the job accrues leave time.
      contractBeginDate:
        type: string
        format: date
        description: The date the contract begins.
        example: '1970-1-21'
      contractEndDate:
        type: string
        format: date
        description: The date the contract ends.
        example: '1971-2-21'
      contractType:
        type: object
        properties:
          code:
            type: string
            enum: [P, S, O]
            description: |
              Contract type code/Id.
              - `P` - Primary
              - `S` - Secondary
              - `O` - Overload
          description:
            type: string
            description: Description of contract code
      campus:
        type: object
        properties:
          code:
            type: string
            description: Id of campus where this job will be performed.
          description:
            type: string
            description: Description of campus code
      status:
        type: string
        description: Job status.
        enum: *jobStatusEnums
      jobDescription:
        type: string
        description: Description of job.
      personnelChangeDate:
        type: string
        format: date
        description: Date the last change was made to the job record.
        example: '1970-1-1'
      changeReasonCode:
        type: string
        description: The reason the last change was made to the job record.
      fullTimeEquivalency:
        type: number
        format: float
        description: Full time equivalency where full time = 1.
        example: 0.25
      appointmentPercent:
        type: number
        format: float
        description: FTE presented as a whole percentage.
        example: 25
      salaryStep:
        type: string
        format: integer
        example: 1
      salaryGroup:
        type: object
        properties:
          code:
            type: string
            description: Salary group code for the job.
            example: 12345A
          description:
            type: string
            description: Description for salary group code
      strsAssignment:
        type: object
        properties:
          code:
            type: string
            description: STRS assignment code for the job.
            example: '12'
          description:
            type: string
            description: Description for the strsAssignment code
      supervisor:
        $ref: '#/definitions/SupervisorAttributes'
      timesheetCode:
        type: object
        properties:
          code:
            type: string
            description: Organization code where the time sheet is sent for the job.
            example: '123456'
          description:
            type: string
            description: Organization title where timesheet is sent for the job.
      timesheetPredCode:
        type: object
        properties:
          code:
            type: string
            description: The next higher organizational code of the current timesheet organization.
            example: '123456'
          description:
            type: string
            description: The next higher organizational title of the current timesheet organization.
      homeOrganizationCode:
        type: object
        properties:
          code:
            type: string
            description: The home organization code of the employee.
            example: '123456'
          description:
            type: string
            description: The home organization title of the employee.
      homeOrganizationPredCode:
        type: object
        properties:
          code:
            type: string
            description: The next higher organizational code of the current home organization.
            example: '123456'
          description:
            type: string
            description: The next higher organizational title of the current home organization.
      hourlyRate:
        type: number
        format: float
        description: Hourly pay rate of the job.
        example: 12.85
      hoursPerPay:
        type: number
        format: float
        description: Hours per payment for the job.
        example: 173.33
      assignmentSalary:
        type: number
        format: float
        description: The salary to be paid each pay period.
        example: 1670.83
      paysPerYear:
        type: number
        format: float
        description: The number of pays per calendar year.
        example: 12.0
      employeeClassification:
        type: object
        properties:
          code:
            type: string
            description: The employee class attached to the job, based on the Employee Class entered on the Position Form (NBAPOSN).
            example: CA
          description:
            type: string
            description: Description of the employee classification code
      employerIdentification:
        type: object
        properties:
          code:
            type: string
            description: Employer identification code.
            example: ORST
          description:
            type: string
            description: Description of employer identification code
      annualSalary:
        type: number
        format: float
        description: Annual salary for the job.
        example: 30000.50
      earnCode:
        type: object
        properties:
          code:
            type: string
            description: Default earnings code attached to the job and used on timesheet.
            example: REG
          description:
            type: string
            description: Description of earn code
      earnCodeHours:
        type: number
        format: float
        description: Hours/units defaulted on timesheets for earnCode.
        example: 173.33
      earnCodeShift:
        type: string
        description: Shift code used as a default on timesheet for earnCode.
      useTemporarySsn:
        type: boolean
        description: When creating or updating a job, this field indicates the employee needs a temporary social security number assigned.
      employeeInformationReleaseInd:
        type: boolean
        description: Indicates the employee has consented to having their employment information shared.
      salaryInformationReleaseInd:
        type: boolean
        description: Indicates the employee accepted or denied to have their salary information shared.
      salaryInformationReleaseDate:
        type: string
        format: date
        description: The date that the employee accepted or denied to have their salary information shared.
        example: '1970-1-1'
      retirement:
        type: object
        properties:
          code:
            type: string
            description: Retirement code
          description:
            type: string
            description: Description of retirement code
      i9Form:
        type: object
        properties:
          code:
            type: string
            description: |
              Code to indicate the status of the employee's I9 form.
              - `R` - Received
              - `N` - Not Received
              - `T` - Temporary
              - `E` - Exempt
          description:
            type: string
            description: Description of i9Form code
      laborDistribution:
        type: array
        items:
          required:
            - effectiveDate
            - accountIndexCode
            - distributionPercent
          properties:
            effectiveDate:
              type: string
              format: date
              description: Date this labor distribution becomes effective.
              example: '1970-1-1'
            accountIndex:
              type: object
              properties:
                code:
                  type: string
                  example: ABC123
                description:
                  type: string
                  description: Description of account index code
            fund:
              type: object
              properties:
                code:
                  type: string
                description:
                  type: string
                  description: Description of fund code
            organization:
              type: object
              properties:
                code:
                  type: string
                description:
                  type: string
                  description: Description of organization code
            account:
              type: object
              properties:
                code:
                  type: string
                description:
                  type: string
                  description: Description of account code
            program:
              type: object
              properties:
                code:
                  type: string
                description:
                  type: string
                  description: Description of program code
            activity:
              type: object
              properties:
                code:
                  type: string
                description:
                  type: string
                  description: Description of activity code
            location:
              type: object
              properties:
                code:
                  type: string
                description:
                  type: string
                  description: Description of location code
            distributionPercent:
              type: number
              format: float
              description: Percentage of labor applied to this fund.
              example: 49.9
  JobId:  
    type: string
    description: Uniquely identifies a job record for the given person.
    example: C12345-00
  JobResource:
    type: object
    properties:
      id:
        $ref: '#/definitions/JobId'
      type:
        $ref: '#/definitions/JobType'
      links:
        $ref: '#/definitions/SelfLink'
      attributes:
        $ref: '#/definitions/JobAttributes'
  JobSetResult:
    type: object
    properties:
      links:
        $ref: '#/definitions/SelfLink'
      data:
        type: array
        items:
          $ref: '#/definitions/JobResource'
  JobResult:
    type: object
    properties:
      links:
        $ref: '#/definitions/SelfLink'
      data:
        $ref: '#/definitions/JobResource'
  JobPostBody:
    type: object
    required:
      - data
    properties:
      data:
        type: object
        required:
          - type
          - attributes
        properties:
          type:
            $ref: '#/definitions/JobType'
          attributes:
            allOf:
              - $ref: '#/definitions/JobPostRequired'
              - $ref: '#/definitions/JobAttributes'
  JobPatchBody:
    type: object
    required:
      - data
    properties:
      data:
        type: object
        required:
          - id
          - type
        additionalProperties: false
        properties:
          id:
            $ref: '#/definitions/JobId'
          type:
            $ref: '#/definitions/JobType'
          attributes:
              $ref: '#/definitions/JobAttributes'
  SsnPostAttributes:
    type: object
    required:
      - ssn
    additionalProperties: false
    properties:
      ssn:
        type: string
        description: 9 digits SSN
        example: '123456789'
  SsnPostBody:
    type: object
    required:
      - data
    additionalProperties: false
    properties:
      data:
        type: object
        required:
          - type
          - attributes
        additionalProperties: false
        properties:
          type:
            $ref: '#/definitions/SsnType'
          attributes:
            $ref: '#/definitions/SsnPostAttributes'
  MealPlanAttributes:
    type: object
    properties:
      mealPlan:
        type: string
        description: Description of meal plan
        example: Orange Rewards
      balance:
        type: number
        format: float
        description: Remaining balance on meal plan in USD.
        example: 3.50
      lastUsedDateTime:
        type: string
        format: date-time
        description: The last time the meal plan was used.
        example: '2017-07-14T16:45:15Z'
      lastUsedLocation:
        type: string
        description: Description of the place the meal plan was last used.
        example: Java II
  MealPlanResource:
    type: object
    properties:
      id: 
        type: string
        description: Meal plan ID
        example: '26'
      type:
        $ref: '#/definitions/MealPlanType'
      links:
        $ref: '#/definitions/SelfLink'
      attributes:
        $ref: '#/definitions/MealPlanAttributes'
  MealPlanResult:
    type: object
    properties:
      links:
        $ref: '#/definitions/SelfLink'
      data:
        $ref: '#/definitions/MealPlanResource'
  MealPlanSetResult:
    type: object
    properties:
      links:
        $ref: '#/definitions/SelfLink'
      data: 
        type: array
        items:
          $ref: '#/definitions/MealPlanResource'
  AddressPostAttributes:
    type: object
    required:
      - addressType
      - addressLine1
      - city
    additionalProperties: false
    properties:
      addressType:
        type: string
        enum: *addressTypeEnums
        description: Code for the type of address record.
      addressLine1:
        type: string
        example: 123 Main Street
      addressLine2:
        type: string
        example: Apartment 4
      addressLine3:
        type: string
      addressLine4:
        type: string
      houseNumber:
        type: string
        example: '620'
      city:
        type: string
        example: Corvallis
      stateCode:
        type: string
        enum: *stateCodeEnums
        description: State code/abbreviation. This could also represent a province.
        example: OR
      postalCode:
        type: string
        example: '97331'
      countyCode:
        type: string
        example: '41003'
      nationCode:
        type: string
        enum: *nationCodeEnums
        description: Code for the nation of the address
  AddressAttributes:
    type: object
    properties:
      addressTypeDescription:
        type: string
        description: Short description of the address type.
        example: Current Mailing
      state:
        type: string
        description: Human readable state code. This could also represent a province.
        example: Oregon
      county:
        type: string
        description: Human readable county.
        example: Benton
      nation:
        type: string
        description: Human readable nation/country name.
        example: Albania
      lastModified:
        type: string
        format: date
        description: The date this address record was last modified.
        example: '1970-1-1'
  AddressResource:
    type: object
    properties:
      id:
        type: string
        description: Globally unique ID for the address
      type:
        $ref: '#/definitions/AddressType'
      links:
        $ref: '#/definitions/SelfLink'
      attributes:
        allOf:
          - $ref: '#/definitions/AddressPostAttributes'
          - $ref: '#/definitions/AddressAttributes'
  AddressSetResult:
    type: object
    properties:
      links:  
        $ref: '#/definitions/SelfLink'
      data:
        type: array
        items:  
          $ref: '#/definitions/AddressResource'
  AddressResult:
    type: object
    properties:
      links:  
        $ref: '#/definitions/SelfLink'
      data:
        $ref: '#/definitions/AddressResource'
  AddressPostBody:
    type: object
    required:
      - data
    additionalProperties: false
    properties:
      data:
        type: object
        required:
          - type
          - attributes
        additionalProperties: false
        properties:
          type:
            $ref: '#/definitions/AddressType'
          attributes:
            $ref: '#/definitions/AddressPostAttributes'
  PhonePostAttributes:
    type: object
    required:
      - addressType
      - phoneType
      - areaCode
      - phoneNumber
      - primaryInd
    additionalProperties: false
    properties:
      areaCode:
        type: string
        description: Area code for the phone number.
        example: '541'
        pattern: '^[0-9]{1,3}$'
      phoneNumber:
        type: string
        description: Extension for the phone number. Can be returned in different formats.
        example: '4443333'
        pattern: '^[0-9]{1,7}$'
      phoneExtension:
        type: string
        description: Extension for the phone number. Can be returned in different formats.
        example: '20'
        pattern: '^[0-9]{1,4}$'
      primaryInd:
        type: boolean
        description: Indicates if this phone number is marked as the primary number.
        example: true
      phoneType:
        type: string
        description: Enum marking which type of address this phone number matches with.
        enum: *phoneTypeEnums
      addressType:
        type: string
        description: Enum marking which type of address this phone number matches with.
        enum: *addressTypeEnums
  PhoneAttributes:
    type: object
    properties:
      fullPhoneNumber:
        type: string
        description: Combination of area code and phone number.
        example: '5414443333'
      phoneTypeDescription:
        type: string
        description: Describes the phone type enum.
        example: Current
      addressTypeDescription:
        type: string
        description: Describes the address type enum.
        example: Current Mailing
      lastModified:
        type: string
        format: date
        description: The date of the most recent change made to this record.
        example: '2015-10-19'
  PhoneResource:
    type: object
    properties:
      id:
        type: string
        description: Globally unique ID for the phone
      type:
        $ref: '#/definitions/PhoneType'
      links:
        $ref: '#/definitions/SelfLink'
      attributes:
        allOf:
          - $ref: '#/definitions/PhonePostAttributes'
          - $ref: '#/definitions/PhoneAttributes'
  PhoneSetResult:
    type: object
    properties:
      link:
        $ref: '#/definitions/SelfLink'
      data:
        type: array
        items:
          $ref: '#/definitions/PhoneResource'
  PhoneResult:
    type: object
    properties:
      link:
        $ref: '#/definitions/SelfLink'
      data:
        $ref: '#/definitions/PhoneResource'
  PhonePostBody:
    type: object
    required:
      - data
    additionalProperties: false
    properties:
      data:
        type: object
        required:
          - type
          - attributes
        additionalProperties: false
        properties:
          type:
            $ref: '#/definitions/PhoneType'
          attributes:
            $ref: '#/definitions/PhonePostAttributes'
  EmailPostAttributes:
    type: object
    required:
      - emailType
      - emailAddress
    additionalProperties: false
    properties:
      emailType:
        type: object
        properties:
          code:
            type: string
            enum: *emailTypeEnums
            description: |
              Type of email
              - `STU` - Non-directory Student
              - `ONID` - Student
              - `VEND` - Vendor
              - `VWEB` - Vendor
              - `EMPL` - Employee
              - `VPAY` - Vendor Pay
              - `EMER` - Emergency Contact Persons Email for Student
          description:
            type: string
            description: Description of email code
      emailAddress:
        type: string
        format: email
        description: Email address for a person
        example: john.smith@example.com
      comment:
        type: string
        description: Comment associated with this email
      preferredInd:
        type: boolean
        description: Indicator for a preferred email
  EmailAttributes:
    type: object
    properties:
      lastActivityDate:
        type: string
        format: date
        description: Date of last activity for this email
        example: '1970-1-1'
  EmailResource:
    type: object
    properties:
      id:
        type: string
        description: Unique ID for an email address
        example: '918179'
      type:
        $ref: '#/definitions/EmailType'
      links:
        $ref: '#/definitions/SelfLink'
      attributes:
        allOf:
          - $ref: '#/definitions/EmailPostAttributes'
          - $ref: '#/definitions/EmailAttributes'
  EmailSetResult:
    type: object
    properties:
      links:
        $ref: '#/definitions/SelfLink'
      data: 
        type: array
        items:
          $ref: '#/definitions/EmailResource'
  SelfLink:
    properties:
      self:
        type: string
        format: uri
        description: Self link of resource
  ErrorObject:
    properties:
      status:
        type: string
        description: HTTP status code
        example: '123'
      title:
        type: string
        description: A short, user readable summary of the error
        example: Not Found
      code:
        type: string
        description: An application-specific error code
        example: '1234'
      detail:
        type: string
        description: A long description of the error that may contain instance-specific details
      links:
        properties:
          about:
            type: string
            format: uri
            description: A link to further information about the error
            example: https://developer.oregonstate.edu/documentation/error-reference#1234
  ErrorResult:
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorObject'
