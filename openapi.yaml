swagger: '2.0'
info:
  title: Persons API
  description: Get information about people at OSU.
  version: v2
  license:
    name: GNU Affero General Public License Version 3
    url: http://www.gnu.org/licenses/agpl-3.0.en.html
  contact:
    name: IS Data Architecture Team
    url: https://is.oregonstate.edu/data-architecture
    email: isdataarchitecture@oregonstate.edu
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/persons-api
host: api.oregonstate.edu
schemes:
  - https
basePath: /v2
produces:
  - application/json
consumes:
  - application/json
security:
  - Oauth2:
    - full
paths:
  /persons:
    post:
      description: Post person
      tags:
        - persons
      operationId: getPersons
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PersonPostBody'
      responses:
        '202':
          description: Successful response
          schema:
            $ref: '#/definitions/PersonResult'
        '400':
          $ref: '#/responses/400'
        '500':
          $ref: '#/responses/500'
  /persons/{osuId}:
    get:
      description: Get general person information
      tags:
        - persons
      operationId: getPersonById
      parameters:
        - $ref: '#/parameters/osuId'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PersonResult'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
  /persons/{osuId}/image:
    get:
      description: Get a person's image
      tags:
        - images
      operationId: getImageById
      produces:
        - image/jpeg
        - application/json
      parameters:
        - in: query
          name: width
          description: Resizes image to a pixel value for width while keeping original aspect ratio
          required: false
          type: integer
        - $ref: '#/parameters/osuId'
      responses:
        '200':
          description: Successful response
          schema:
            type: file
          headers:
            Content-type:
              type: string
              description: image/jpeg
        '404':
          $ref: '#/responses/404'
parameters:
  osuId:
    name: osuId
    in: path
    required: true
    description: OSU ID of a person
    type: string
responses:
  '400':
    description: Bad request
    schema:
      $ref: '#/definitions/ErrorResult'
  '404':
    description: Resource not found
    schema:
      $ref: '#/definitions/ErrorResult'
  '500':
    description: Internal server error
    schema:
      $ref: '#/definitions/ErrorResult'
securityDefinitions:
  OAuth2:
    type: oauth2
    flow: application
    tokenUrl: https://api.oregonstate.edu/oauth2/token
    scopes:
      full: Full access to the API
definitions:
  PersonType:
    type: string
    example: person
  PersonCommonAttributes:
    type: object
    required:
    - firstName
    - lastName
    - birthDate
    - sex
    properties:
      firstName:
        type: string
        description: First name of person
        example: John
      lastName:
        type: string
        description: Last name of person
        example: Smith
      middleName:
        type: string
        description: Middle name of person
        example: Adam
      birthDate:
        type: string
        format: date
        description: Birthday of person
        example: 1970-1-21
      citizen:
        type: string
        enum: [FN, N, R, S, C]
        description: |
          Person's citizen code
          - `FN` - Foreign National
          - `N` - Non Resident Alien
          - `R` - Resident Alien
          - `S` - Substantial Presence Alien
          - `C` - Citizen
      sex:
        type: string
        description: |
          Person's sex code
          - `M` - Male
          - `F` - Female
          - `N` - Non-specified
  PersonAttributes:
    type: object
    properties:
      displayFirstName:
        type: string
        description: Preferred first name
        example: John
      displayMiddleName:
        type: string
        description: Preferred middle name
        example: Adam
      displayLastName:
        type: string
        description: Preferred last name
        example: Smith
      onid:
        type: string
        description: ONID username
        example: smithj
      email:
        type: string
        description: Primary email address
        example: john.smith@example.com
      isConfidential:
        type: boolean
        description: If true, the person has opted in to being required to be listed as confidential
      isCurrentStudent:
        type: boolean
        description: True if person is a current student
      isCurrentEmployee:
        type: boolean
        description: True if person is a current employee
      employeeStatus:
        type: string
        enum: [A, B, L, F, P, T]
        description: |
          The status of the employee:
          `A` - Active
          `B` - Leave without pay and with benefits
          `L` - Leave without pay and without benefits
          `F` - Leave with pay and with benefits
          `P` - Leave with partial pay and with benefits
          `T` - Terminated
      ssnStatus:
        type: string
        enum:
          - vault
          - valid
          - invalid
        description: SSN status
  PersonResource:
    type: object
    properties:
      id:
        type: string
        description: OSU ID of a person
        pattern: '^\d{9}$'
      type:
        $ref: '#/definitions/PersonType'
      links:
        $ref: '#/definitions/SelfLink'
      attributes:
        allOf:
          - $ref: '#/definitions/PersonCommonAttributes'
          - $ref: '#/definitions/PersonAttributes'
  PersonResult:
    type: object
    properties:
      links:
        $ref: '#/definitions/SelfLink'
      data:
        $ref: '#/definitions/PersonResource'
  PersonPostBody:
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/PersonType'
          attributes:
            $ref: '#/definitions/PersonCommonAttributes'
  JobPutAttributes:
    type: object
    properties:
      positionNumber:
        type: string
        description: Identifies a position
        example: C12345
      suffix:
        type: string
        description: |
          Used to uniquely identify a job record for persons who have
          multiple jobs that share the same position number.
          For updating existing jobs, this field is required.
      effectiveDate:
        type: string
        format: date
        description: The date this job assignment is effective.
        example: 1970-1-21
      beginDate:
        type: string
        format: date
        description: Begin date of job.
        example: 1970-1-21
      endDate:
        type: string
        format: date
        description: End date of job.
        example: 1971-2-15
      accruesLeaveInd:
        type: boolean
        description: If true, the job accrues leave time.
      contractBeginDate:
        type: string
        format: date
        description: The date the contract begins.
        example: 1970-1-21
      contractEndDate:
        type: string
        format: date
        description: The date the contract ends.
        example: 1971-2-21
      contractType:
        type: string
        enum: [P, S, O]
        description: |
          Contract type code/Id.
          `P` - Primary
          `S` - Secondary
          `O` - Overload
      locationId:
        type: string
        description: Location Id of where job will be performed.
      status:
        type: string
        description: Job status.
        enum:
          - Active
          - Leave without pay but with benefits
          - Leave without pay and benefits
          - Leave with full pay and benefits
          - Leave with partial pay and benefits
          - Terminated
      description:
        type: string
        description: Description of job.
      personnelChangeDate:
        type: string
        format: date
        description: Date the last change was made to the job record.
        example: 1970-1-1
      changeReasonCode:
        type: string
        description: The reason the last change was made to the job record.
      fullTimeEquivalency:
        type: number
        format: float
        description: Full time equivalency where full time = 1
        example: 0.25
  SelfLink:
    properties:
      self:
        type: string
        format: url
        description: Self link of resource
  ErrorObject:
    properties:
      status:
        type: string
        description: HTTP status code
        example: '123'
      title:
        type: string
        description: A short, user readable summary of the error
        example: Not Found
      code:
        type: string
        description: An application-specific error code
        example: '1234'
      detail:
        type: string
        description: A long description of the error that may contain instance-specific details
      links:
        properties:
          about:
            type: string
            format: url
            description: A link to further information about the error
            example: https://developer.oregonstate.edu/documentation/error-reference#1234
  ErrorResult:
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorObject'
