openapi: 3.0.0
info:
  title: Persons API
  description: Get information about people at OSU.
  version: v2
  license:
    name: GNU Affero General Public License Version 3
    url: http://www.gnu.org/licenses/agpl-3.0.en.html
  contact:
    name: IS Data Architecture Team
    url: https://is.oregonstate.edu/data-architecture
    email: isdataarchitecture@oregonstate.edu
servers:
  - url: https://api.oregonstate.edu/v2
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/persons-api
security:
  - OAuth2:
    - full
paths:
  /persons:
    post:
      description: Create a person
      summary: Create a person
      tags:
        - persons
      operationId: postPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonPostBody'
        required: true
      responses:
        '202':
          description: The backend data source needs to do additional processing with the
            new person record. Person record accepted but not yet created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResult'
        '400':
          $ref: '#/components/responses/400'
        '409':
          $ref: '#/components/responses/409Post'
        '500':
          $ref: '#/components/responses/500'
  /persons/{osuId}:
    get:
      description: Get general person information
      summary: Get general person information
      tags:
        - persons
      operationId: getPersonById
      parameters:
        - $ref: '#/components/parameters/osuId'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResult'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /persons/{osuId}/jobs:
    get:
      description: Get jobs associated with a person
      summary: Get jobs associated with a person
      tags:
        - jobs
      operationId: getJobs
      parameters:
        - $ref: '#/components/parameters/osuId'
        - name: filter[positionNumber]
          in: query
          required: false
          description: Filter by position ID.
          schema:
            type: string
        - name: filter[suffix]
          in: query
          required: false
          description: >-
            Filter by suffix. The suffix is used to differentiate multiple jobs
            that share the same position number for a given person.
          schema:
            type: string
        - name: filter[statusCode]
          in: query
          required: false
          description: |
            Filter by the status of the job
            - `A` - Active
            - `B` - Leave without pay but with benefits
            - `L` - Leave without pay and benefits
            - `F` - Leave with full pay and benefits
            - `P` - Leave with partial pay and benefits
            - `T` - Terminated
          schema:
            type: string
            enum: &statusCodeEnums [A, B, L, F, P, T]
        - name: filter[campusCode]
          in: query
          required: false
          description: |
            Filter results by campus ID. Common campus IDs:
            - `02A` - Corvallis
            - `09A` - Bend
            - `21B` - Newport
            - `31E` - Eastern
            - `26C` - Portland
          schema:
            type: string
            enum: ['47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59',
            '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73',
            '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '33D',
            '33E', '33F', '33G', '34A', '34B', '34C', '34D', '34E', '34F', '34G', '34H', '34I',
            '35A', '35B', '36A', '36B', '36C', '36D', '36E', '36F', '36G', '36H', '36I', '37', '40',
            '41', '42', '43', '44', '45', '46', '29E', '29F', '29G', '30A', '30B', '30C', '30D',
            '30E', '30F', '30G', '30H', '30I', '30J', '30K', '30L', '31A', '31B', '31C', '31D',
            '31E', '31F', '31G', '31H', '32A', '32B', '32C', '32D', '33A', '33B', '33C', '24M',
            '24N', '24O', '24P', '24Q', '24R', '24S', '25A', '25B', '25C', '25D', '25E', '26A',
            '26B', '26C', '26D', '26E', '27A', '27B', '27C', '27D', '27E', '28A', '28B', '28C',
            '29A', '29B', '29C', '29D', '21B', '21C', '21D', '21E', '22A', '22B', '22C', '22D',
            '22E', '22F', '22G', '22H', '22I', '23A', '23B', '23C', '23D', '23E', '23F', '24A',
            '24B', '24C', '24D', '24E', '24F', '24G', '24H', '24I', '24J', '24K', '24L', '15E',
            '15F', '15G', '15H', '15I', '15J', '16A', '16B', '16C', '17A', '17B', '18A', '18B',
            '18C', '18D', '18E', '19A', '19B', '19C', '20A', '20B', '20C', '20D', '20E', '20F',
            '20G', '20H', '20I', '21A', '10F', '10G', '10H', '10I', '10J', '10K', '11A', '11B',
            '11C', '12A', '12B', '12C', '12D', '12E', '12F', '12G', '12H', '12I', '13A', '13B',
            '13C', '13D', '13E', '14A', '14B', '15A', '15B', '15C', '15D', '01A', '01B', '01C',
            '01D', '01E', '01F', '01G', '01H', '01I', '02A', '02B', '02C', '03A', '03B', '03C',
            '03D', '03E', '03F', '03G', '03H', '03I', '03J', '03K', '03L', '04A', '04B', '04C',
            '04D', '04E', '05A', '05B', '05C', '05D', '05E', '05F', '05G', '05H', '06A', '06B',
            '06C', '06D', '06E', '06F', '06G', '06H', '06I', '07A', '08A', '08B', '08C', '09A',
            '09B', '09C', '10A', '10B', '10C', '10D', '10E', '87', '88', '89', '16D', '34J', '20J',
            '03M', '02D', '02E', '07B', '13F', '25F', '06J', '05I', '03N', '34K', '20K', '34L',
            '24T', '10L', '09D', '09E', '27F', '20L', '37A', '27G', '22J']
        - $ref: '#/components/parameters/studentEmployeeInd'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSetResult'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      description: Create a job record for a person
      summary: Create a job record for a person
      tags:
        - jobs
      operationId: postJob
      parameters:
        - $ref: '#/components/parameters/osuId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPostBody'
        required: true
      responses:
        '202':
          description: The backend data source needs to do additional processing with the
            new job record. Job record accepted but not yet created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResult'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409Post'
        '500':
          $ref: '#/components/responses/500'
  /persons/{osuId}/jobs/{jobId}:
    get:
      description: Get a specific job associated with a person
      summary: Get a specific job associated with a person
      tags:
        - jobs
      operationId: getJobById
      parameters:
        - $ref: '#/components/parameters/osuId'
        - $ref: '#/components/parameters/jobId'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResult'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    patch:
      description: Update a job record for a person
      summary: Update a job record for a person
      tags:
        - jobs
      operationId: patchJobById
      parameters:
        - $ref: '#/components/parameters/osuId'
        - $ref: '#/components/parameters/jobId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPatchBody'
        description: patch body for a job
        required: true
      responses:
        '202':
          description: The backend data source needs to do additional processing with the
            updated job record. Job record accepted but not yet updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResult'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409Patch'
        '500':
          $ref: '#/components/responses/500'
  /persons/{osuId}/ssn:
    post:
      description: Create a person's SSN
      summary: Create a person's SSN
      tags:
        - ssn
      operationId: postSsn
      parameters:
        - $ref: '#/components/parameters/osuId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SsnPostBody'
        description: SSN post body
        required: true
      responses:
        '204':
          description: SSN accepted
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409Post'
        '500':
          $ref: '#/components/responses/500'
  /persons/{osuId}/images:
    get:
      description: Get a person's image
      summary: Get a person's image
      tags:
        - images
      operationId: getImages
      parameters:
        - $ref: '#/components/parameters/osuId'
        - $ref: '#/components/parameters/imageWidth'
      responses:
        '200':
          description: Successful response
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /persons/{osuId}/meal-plans:
    get:
      description: Get meal plans for a person
      summary: Get meal plans for a person
      tags:
        - meal-plans
      operationId: getMealPlans
      parameters:
        - $ref: '#/components/parameters/osuId'
        - name: filter[balance][gt]
          in: query
          required: false
          description: Filter results based on the remaining balance.
          schema:
            type: number
            format: float
        - name: filter[balance][gte]
          in: query
          required: false
          description: Filter results based on the remaining balance.
          schema:
            type: number
            format: float
        - name: filter[lastUsedDateTime][lte]
          in: query
          required: false
          description: Filter results based on the last date and time the meal-plan was
            used.
          schema:
            type: string
            format: date-time
        - name: filter[lastUsedDateTime][gte]
          in: query
          required: false
          description: Filter results based on the last date and time the meal-plan was used.
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealPlanSetResult'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /persons/{osuId}/meal-plans/{mealPlanId}:
    get:
      description: Get a specific meal plan for a person
      summary: Get a specific meal plan for a person
      tags:
        - meal-plans
      operationId: getMealPlanById
      parameters:
        - $ref: '#/components/parameters/osuId'
        - $ref: '#/components/parameters/mealPlanId'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealPlanResult'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /persons/{osuId}/addresses:
    get:
      description: Get addresses for a person
      summary: Get addresses for a person
      tags:
        - addresses
      operationId: getAddresses
      parameters:
        - $ref: '#/components/parameters/osuId'
        - name: filter[city]
          in: query
          required: false
          description: Filter results by city.
          schema:
            type: string
        - name: filter[county]
          in: query
          required: false
          description: Filter results by county.
          schema:
            type: string
        - name: filter[stateCode]
          in: query
          required: false
          description: Filter results by state code.
          schema:
            type: string
            enum:
              &stateCodeEnums [DE, NJ, PA, DC, NY, CA, VA, NC, TX, FL, HI, WV, MT, GA, MD, OH, IN,
              AK, AL, AR, AZ, CO, CT, IA, ID, IL, KS, KY, LA, MA, ME, MI, MN, MO, MS, ND, NE, NH,
              NM, NV, OK, OR, RI, SC, SD, TN, UT, VT, WA, WI, WY, VI, TT, PR, GU, CZ, AS, BC, NT,
              AB, ON, SK, NB, NF, NS, PE, PQ, MP, FM, MH, PW, MB, YT, AP, AE, AA, FC, FR, NU, BY,
              ENG]
        - name: filter[nationCode]
          in: query
          required: false
          description: Filter results by nation code.
          schema:
            type: string
            enum:
              &nationCodeEnums [FPL, ARE, ARW, KSA, QSG, ESL, GES, CSD, KSY, HTT, ETG, JUY, JVE,
              KYD, AZM, FAL, GAD, JAR, HBS, KBH, PBT, ABI, QBU, LCA, BCG, OTW, OCN, ICR, GDK, ISV,
              AET, NPF, BGA, SGL, HHT, GIS, KIQ, HJM, AKE, DLS, CLY, GMC, HMQ, AMZ, NPG, ENE, MNZ,
              JPY, HAI, HAG, EBJ, FBY, MCX, NCK, JFK, NGU, HLC, FAM, FMD, FEE, FLT, OMO, FHR, DNA,
              JGY, GDE, HPM, QVN, QBN, CEH, RHM, HKN, NNR, NPN, BST, NTK, FMK, FSR, FTX, FTI, QMM,
              AER, FBO, FAJ, NSB, FUA, FRU, FGE, FBA, GAT, FYU, LBM, RBV, BCF, MCC, HCU, HDO, QTP,
              CEG, JGF, GGR, HGD, EGN, OHK, KIR, KIL, KJO, KLB, GLU, AMG, GMT, AYO, IMX, OMN, GNL,
              NNC, ENG, OKP, PPK, JPE, KQA, FRO, ESN, ADJ, DZA, HVC, KOM, JSR, ATZ, CTN, NTV, GGB,
              NVU, NWF, FBG, QID, GIT, GPT, AZW, FSK, BCM, DBW, EGW, EML, FHU, FKZ, GCH, GLI, GSM,
              HBB, HVG, IGT, KAE, KKW, NFJ, QKH, QPH, NUM, KGZ, FKK, HBL, COD, ASO, PLK, GSE, DSZ,
              QTH, KTR, GVA, NWS, BZR, PAF, CDZ, BAO, MAU, PBD, GBE, IBZ, JBO, JBR, PIO, BTD, JCL,
              JCO, ECV, KCY, JEC, BGQ, GFI, GFR, EGM, HGP, IHN, GIE, ECI, OJP, OKR, ELR, AMW, CMA,
              AMU, QMY, PNP, INI, GNO, IPA, LUS, RAQ, HAW, EBF, HKY, AKM, HDM, GFO, RTF, FKG, FUZ,
              FLV, PMV, FSI, HAN, EGH, PIN, EMR, AUG, KYE, NTO, GGI, NKI, HMS, NNU, ASC, HTC, FEZ,
              FMW, NNF, QLA, IAN, KWE, FTM, HMF, FKV]
        - $ref: '#/components/parameters/addressType'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressSetResult'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      description: Create address for a person
      summary: Create address for a person
      tags:
        - addresses
      operationId: postAddress
      parameters:
        - $ref: '#/components/parameters/osuId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressPostBody'
        description: Post body for new address
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResult'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409Post'
        '500':
          $ref: '#/components/responses/500'
  /persons/{osuId}/phones:
    get:
      description: Get phone numbers for a person
      summary: Get phone numbers for a person
      tags:
        - phones
      operationId: getPhones
      parameters:
        - $ref: '#/components/parameters/osuId'
        - $ref: '#/components/parameters/addressType'
        - $ref: '#/components/parameters/phoneType'
        - name: filter[primaryInd]
          in: query
          required: false
          description: Filter on primary or non-primary phone numbers
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneSetResult'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      description: Create phone number for a person
      summary: Create phone number for a person
      tags:
        - phones
      operationId: postPhone
      parameters:
        - $ref: '#/components/parameters/osuId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhonePostBody'
        description: Post body for the new phone
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneResult'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409Post'
        '500':
          $ref: '#/components/responses/500'
  /persons/{osuId}/emails:
    get:
      description: Get emails for a person
      summary: Get emails for a person
      tags:
        - emails
      operationId: getEmails
      parameters:
        - $ref: '#/components/parameters/osuId'
        - name: filter[emailType]
          in: query
          required: false
          description: |
            Type of email
            - `ONID` - Student
            - `STU` - Non-directory Student
            - `VEND` - Vendor
            - `VWEB` - Vendor
            - `EMPL` - Employee
            - `VPAY` - Vendor Pay
            - `EMER` - Emergency Contact Persons Email for Student
          schema:
            type: array
            items:
              type: string
              enum: 
                &emailTypeEnums [ONID, STU, VEND, VWEB, EMPL, VPAY, EMER]
        - name: filter[preferredInd]
          in: query
          description: Filter on preferred email addresses
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSetResult'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      description: Create or update email address for a person
      summary: Create  or update email adress for a person
      tags:
        - emails
      operationId: postEmail
      parameters:
        - $ref: '#/components/parameters/osuId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailPostBody'
        description: Post body for the new email address
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResult'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409Post'
        '500':
          $ref: '#/components/responses/500'
  /persons/{osuId}/emails/{emailId}:
    get:
      description: Get emails for a person by email ID
      summary: Get emails for a person by email ID
      tags:
        - emails
      operationId: getEmailById
      parameters:
        - $ref: '#/components/parameters/osuId'
        - $ref: '#/components/parameters/emailId'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResult'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    patch:
      description: Update email addresses for a person by email ID
      summary: Update email addresses
      tags:
        - emails
      operationId: patchEmailById
      parameters:
        - $ref: '#/components/parameters/osuId'
        - $ref: '#/components/parameters/emailId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailPostBody'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResult'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409Patch'
        '500':
          $ref: '#/components/responses/500'
components:
  parameters:
    osuId:
      name: osuId
      in: path
      required: true
      description: OSU ID of a person
      schema:
        type: string
        pattern: ^\d{9}$
    jobId:
      name: jobId
      in: path
      description: ID of the specific job to be updated
      required: true
      schema:
        type: string
    imageWidth:
      in: query
      name: width
      description: Resizes image to a pixel value for width while keeping original
        aspect ratio
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 2000
    mealPlanId:
      name: mealPlanId
      in: path
      description: ID of meal plan
      required: true
      schema:
        type: string
    studentEmployeeInd:
      name: filter[studentEmployeeInd]
      in: query
      description: Filter if job is a student job or not
      required: false
      schema:
        type: boolean
    addressType:
      name: filter[addressType]
      in: query
      required: false
      description: |
        Filter by address type. Common address types and their description:
        - `PA` - Student Alternate Contact
        - `RN` - Geographic Origin-First Admit
        - `RB` - Research Billing
        - `RE` - Billing Address
        - `RK` - Financial Aid Address
        - `VO` - Vendor Order
        - `VP` - Vendor Payment
        - `XX` - Reserved for TGRFEED Use Only
        - `CM` - Current Mailing
        - `DM` - Department (US Mail)
        - `EO` - Employee Office (Directory)
        - `RH` - Residence Hall
        - `PR` - Payroll W2 Address
        - `MA` - Reserved for SRTLOAD Use Only
        - `SV` - International -SEVIS
        - `JA` - Job Application (HR use only)
      schema:
        type: string
        enum:
          &addressTypeEnums [PA, RN, RB, RE, RK, VO, VP, XX, CM, DM, EO, RH, PR, MA, SV, JA]
    phoneType:
      name: filter[phoneType]
      in: query
      required: false
      description: |
        Filter by phone type. Phone types and their descriptions:
        - `PA` - Student Alternate Contact
        - `RN` - Geographic Origin-First Admit
        - `RB` - Research Billing
        - `MG` - Mailing Address (Grades)
        - `RE` - Billing Phone
        - `RK` - Financial Aid Address
        - `VO` - Vendor Order
        - `VP` - Vendor Payment
        - `VF` - Vendor Fax
        - `CM` - Current
        - `EO` - Employee Office (Directory)
        - `RH` - Residence Hall
        - `EF` - Employee Office Fax
        - `MP` - Mobile Phone
      schema:
        type: string
        enum:
          &phoneTypeEnums [PA, RN, RB, MG, RE, RK, VO, VP, VF, CM, EO, RH, EF, MP]
    emailId:
      name: emailId
      in: path
      required: true
      description: ID of a specific email address
      schema:
        type: string
  responses:
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResult'
    '404':
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResult'
    '409Post':
      description: >-
        The request body resource object's type was invalid or, if a client-generated ID was used, a
        resource already exists with this ID
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResult'
    '409Patch':
      description: >-
        The request body resource object had an invalid type, invalid ID, or violated a uniqueness
        constraint
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResult'
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResult'
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://api.oregonstate.edu/oauth2/token
          scopes:
            full: Full access to the API
  schemas:
    PersonType:
      type: string
      enum: [person]
    JobType:
      type: string
      enum: [jobs]
    SsnType:
      type: string
      enum: [ssn]
    MealPlanType:
      type: string
      enum: [meal-plans]
    AddressType:
      type: string
      enum: [addresses]
    PhoneType:
      type: string
      enum: [phones]
    EmailType:
      type: string
      enum: [emails]
    PersonPostRequired:
      type: object
      required:
        - firstName
        - lastName
        - birthDate
        - sex
      properties:
        sex:
          nullable: false
        citizen:
          type: object
          required:
            - code
          properties:
            code:
              nullable: false
    PersonPostAttributes:
      type: object
      additionalProperties: false
      properties:
        firstName:
          type: string
          nullable: false
          description: First name of person
          example: John
        lastName:
          type: string
          nullable: false
          description: Last name of person
          example: Smith
        middleName:
          type: string
          nullable: true
          description: Middle name of person
          example: Adam
        birthDate:
          type: string
          nullable: false
          format: date
          description: Birthday of person
          example: '1970-01-21'
        citizen:
          type: object
          properties:
            code:
              type: string
              enum: [FN, N, R, S, C]
              description: |
                Person's citizen code
                - `FN` - Foreign National
                - `N` - Non Resident Alien
                - `R` - Resident Alien
                - `S` - Substantial Presence Alien
                - `C` - Citizen
        sex:
          type: string
          enum: [M, F, N]
          description: |
            Person's sex code
            - `M` - Male
            - `F` - Female
            - `N` - Non-specified
    PersonAttributes:
      type: object
      properties:
        sex:
          nullable: true
        displayFirstName:
          type: string
          nullable: true
          description: Preferred first name
          example: John
        displayMiddleName:
          type: string
          nullable: true
          description: Preferred middle name
          example: Adam
        displayLastName:
          type: string
          nullable: true
          description: Preferred last name
          example: Smith
        onid:
          type: string
          nullable: true
          description: ONID username
          example: smithj
        confidentialInd:
          type: boolean
          nullable: false
          description: If true, the person has opted in to being required to be listed as
            confidential
        currentStudentInd:
          type: boolean
          nullable: false
          description: True if person is a current student
        employeeStatus:
          type: object
          properties:
            code:
              type: string
              nullable: true
              enum: [A, B, L, F, P, T]
              description: |
                The status of the employee:
                - `A` - Active
                - `B` - Leave without pay and with benefits
                - `L` - Leave without pay and without benefits
                - `F` - Leave with pay and with benefits
                - `P` - Leave with partial pay and with benefits
                - `T` - Terminated
            description:
              type: string
              nullable: true
              description: Description of employee status code
              example: Active
        ssnStatus:
          type: string
          nullable: true
          enum: [vault, valid, invalid]
          description: SSN status
        citizen:
          type: object
          properties:
            code:
              nullable: true
            description:
              type: string
              nullable: true
              description: Description field for the code
        lastPaidDate:
          type: string
          format: date
          nullable: true
          example: '2019-06-30'
          description: Most recent date the employee was paid
    PersonResource:
      type: object
      properties:
        id:
          type: string
          description: OSU ID of a person
          pattern: ^\d{9}$
        type:
          $ref: '#/components/schemas/PersonType'
        links:
          $ref: '#/components/schemas/SelfLink'
        attributes:
          allOf:
            - $ref: '#/components/schemas/PersonPostAttributes'
            - $ref: '#/components/schemas/PersonAttributes'
    PersonResult:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/SelfLink'
        data:
          $ref: '#/components/schemas/PersonResource'
    PersonPostBody:
      type: object
      required:
        - data
      additionalProperties: false
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          additionalProperties: false
          properties:
            type:
              $ref: '#/components/schemas/PersonType'
            attributes:
              allOf:
                - $ref: '#/components/schemas/PersonPostRequired'
                - $ref: '#/components/schemas/PersonPostAttributes'
    SupervisorAttributes:
      type: object
      required:
        - osuId
        - positionNumber
      additionalProperties: false
      properties:
        osuId:
          type: string
          nullable: true
          description: OSU ID of the supervisor for the job.
          pattern: ^\d{9}$
        firstName:
          type: string
          nullable: true
          description: First name of the supervisor for the job.
          example: John
        lastName:
          type: string
          nullable: true
          description: Last name of the supervisor for the job.
          example: Smith
        email:
          type: string
          format: email
          nullable: true
          description: The primary email of the supervisor for the job.
          example: john.smith@example.com
        positionNumber:
          type: string
          nullable: true
          description: Position number for the supervisor.
          example: C12345
        suffix:
          type: string
          nullable: true
          description: Suffix of the supervisor.
    JobPostRequired:
      type: object
      required:
        - positionNumber
        - studentEmployeeInd
        - beginDate
        - supervisor
        - effectiveDate
      properties:
        contractBeginDate:
          nullable: false
        contractEndDate:
          nullable: false
        campus:
          nullable: false
        laborDistribution:
          type: array
          items:
            required:
              - effectiveDate
              - accountIndex
              - distributionPercent
        employeeGroup:
          type: object
          properties:
            code:
              enum: [NOSU]
    JobPostAttributes:
      type: object
      additionalProperties: false
      properties:
        suffix:
          type: string
          nullable: false
          maxLength: 2
          description: >-
            Used to uniquely identify a job record for persons who have multiple
            jobs that share the same position number. For updating existing
            jobs, this field is required.
        positionNumber:
          type: string
          nullable: false
          description: Identifies a position.
          example: C12345
        studentEmployeeInd:
          type: boolean
          nullable: false
          description: Indicates if this position is for a student employee or not
        effectiveDate:
          type: string
          nullable: false
          format: date
          description: The date this job assignment is effective.
          example: '1970-01-21'
        beginDate:
          type: string
          nullable: false
          format: date
          description: Begin date of job.
          example: '1970-01-21'
        endDate:
          type: string
          nullable: true
          format: date
          description: End date of job.
          example: '1971-02-15'
        accruesLeaveInd:
          type: boolean
          nullable: false
          description: If true, the job accrues leave time.
        contractBeginDate:
          type: string
          format: date
          description: The date the contract begins.
          example: '1970-01-21'
        contractEndDate:
          type: string
          format: date
          description: The date the contract ends.
          example: '1971-02-21'
        campus:
          type: object
          properties:
            code:
              type: string
              description: ID of campus where this job will be performed.
        status:
          type: object
          properties:
            code:
              type: string
              nullable: false
              description: Job status.
              enum: *statusCodeEnums
        jobDescription:
          type: string
          nullable: true
          description: Description of job.
        location:
          type: object
          properties:
            code:
              type: string
              nullable: true
        personnelChangeDate:
          type: string
          nullable: false
          format: date
          description: Date the last change was made to the job record.
          example: '1970-01-01'
        changeReason:
          type: object
          properties:
            code:
              type: string
              nullable: false
              description: The reason the last change was made to the job record.
        fullTimeEquivalency:
          type: number
          nullable: false
          format: float
          description: Full time equivalency where full time = 1.
          example: 0.25
        appointmentPercent:
          type: number
          nullable: false
          format: float
          description: FTE presented as a whole percentage.
          example: 25
        strsAppointmentBasis:
          type: string
          nullable: true
          description: STRS assignment code / appointment basis for the job.
          maxLength: 2
          example: '12'
        supervisor:
          $ref: '#/components/schemas/SupervisorAttributes'
        timesheet:
          type: object
          properties:
            current:
              type: object
              properties:
                code:
                  type: string
                  nullable: false
                  description: Organization code where the time sheet is sent for the job.
                  example: '123456'
        homeOrganization:
          type: object
          properties:
            current:
              type: object
              properties:
                code:
                  type: string
                  nullable: true
                  description: The home organization code of the employee.
                  example: '123456'
        hourlyRate:
          type: number
          nullable: false
          format: float
          description: Hourly pay rate of the job.
          example: 12.85
        hoursPerPay:
          type: number
          nullable: false
          format: float
          description: Hours per payment for the job.
          example: 173.33
        salary:
          type: object
          properties:
            annual:
              type: number
              nullable: false
              format: float
              description: Annual salary for the job.
              example: 30000.5
            paysPerYear:
              type: number
              nullable: false
              format: float
              description: The number of pays per calendar year.
              example: 12
        employeeClassification:
          type: object
          properties:
            code:
              type: string
              nullable: false
              description: The employee class attached to the job, based on the Employee
                Class entered on the Position Form (NBAPOSN).
              example: CA
        employeeGroup:
          type: object
          properties:
            code:
              type: string
              nullable: true
              description: The group this employee belongs to.
        earningCode:
          type: object
          properties:
            hours:
              type: number
              format: float
              nullable: true
              description: Hours/units defaulted on timesheets for earnCode.
              example: 173.33
            effectiveDate:
              type: string
              format: date
              nullable: false
              description: Effective date of the earning code
              example: '1970-01-01'
            code:
              type: string
              nullable: false
              maxLength: 3
              description: Default earnings code attached to the job and used on timesheet.
              example: REG
        useTemporarySsnInd:
          type: boolean
          nullable: false
          description: When creating or updating a job, this field indicates the employee
            needs a temporary social security number assigned.
        employeeInformationReleaseInd:
          type: boolean
          nullable: false
          description: Indicates the employee has consented to having their employment
            information shared.
        salaryInformationReleaseInd:
          type: boolean
          nullable: false
          description: Indicates the employee accepted or denied to have their salary
            information shared.
        salaryInformationReleaseDate:
          type: string
          nullable: true
          format: date
          description: The date that the employee accepted or denied to have their salary
            information shared.
          example: '1970-01-01'
        retirement:
          type: object
          properties:
            code:
              type: string
              nullable: false
              description: Retirement code
        i9Form:
          type: object
          properties:
            code:
              type: string
              nullable: true
              description: |
                Code to indicate the status of the employee's I9 form.
                - `R` - Received
                - `N` - Not Received
                - `T` - Temporary
                - `E` - Exempt
            date:
              type: string
              format: date
              nullable: true
              description: Date of i9Form
              example: '1970-01-01'
            expirationDate:
              type: string
              format: date
              nullable: true
              description: Expiration date of i9Form
              example: '1970-01-01'
        laborDistribution:
          type: array
          items:
            type: object
            properties:
              effectiveDate:
                type: string
                nullable: false
                format: date
                description: Date this labor distribution becomes effective.
                example: '1970-01-01'
              accountIndex:
                type: string
                nullable: false
                example: ABC123
              fund:
                type: string
                nullable: true
                example: '001100'
              organization:
                type: string
                nullable: true
                example: '121205'
              account:
                type: string
                nullable: true
                example: '10301'
              program:
                type: string
                nullable: true
                example: '61000'
              activity:
                type: string
                nullable: true
                example: '123456'
              location:
                type: string
                nullable: true
                example: '123456'
              distributionPercent:
                type: number
                format: float
                nullable: false
                description: Percentage of labor applied to this fund.
                example: 49.9
    JobAttributes:
      type: object
      additionalProperties: false
      properties:
        contractBeginDate:
          nullable: true
        contractEndDate:
          nullable: true
        contractType:
          type: object
          properties:
            code:
              type: string
              nullable: true
              enum: [P, S, O]
              description: |
                Contract type code/Id.
                - `P` - Primary
                - `S` - Secondary
                - `O` - Overload
            description:
              type: string
              nullable: false
              description: Description of contract code
        campus:
          type: object
          properties:
            code:
              nullable: true
            description:
              type: string
              nullable: false
              description: Description of campus code
        status:
          type: object
          properties:
            description:
              type: string
              nullable: false
              description: Description of status code
        changeReason:
          type: object
          properties:
            description:
              type: string
              nullable: false
              description: Description of change reason code
        timesheet:
          type: object
          properties:
            current:
              type: object
              properties:
                description:
                  type: string
                  nullable: false
                  description: Organization title where timesheet is sent for the job.
            predecessor:
              type: object
              properties:
                code:
                  type: string
                  nullable: false
                  description: The next higher organizational code of the current timesheet
                    organization.
                  example: '123456'
                description:
                  type: string
                  nullable: false
                  description: >-
                    The next higher organizational title of the current timesheet organization.
        homeOrganization:
          type: object
          properties:
            current:
              type: object
              properties:
                description:
                  type: string
                  nullable: false
                  description: The home organization title of the employee.
            predecessor:
              type: object
              properties:
                code:
                  type: string
                  nullable: true
                  description: The next higher organizational code of the current home
                    organization.
                  example: '123456'
                description:
                  type: string
                  nullable: false
                  description: The next higher organizational title of the current home
                    organization.
        lastPaidDate:
          type: string
          format: date
          nullable: true
          example: '2019-06-20'
          description: Date the person was last paid for this job
        salary:
          type: object
          properties:
            assignment:
              type: number
              nullable: false
              format: float
              description: The salary to be paid each pay period.
              example: 1670.83
            step:
              type: number
              nullable: false
              format: integer
              example: 1
            group:
              type: object
              properties:
                code:
                  type: string
                  nullable: false
                  description: Salary group code for the job.
                  example: 12345A
                description:
                  type: string
                  nullable: false
                  description: Description for salary group code
        employeeClassification:
          type: object
          properties:
            category:
              type: string
              description: Job classification
              enum:
                - Classified
                - Temporary
                - Student
                - Unclassified
                - Unpaid Appt
            shortDescription:
              type: string
              nullable: false
              description: Short description of the employee classification code
            longDescription:
              type: string
              nullable: false
              description: Long description of employee classification code
        employeeGroup:
          type: object
          properties:
            description:
              type: string
              nullable: true
              description: Description of employee group code
              example: Non-OSU Student
        employerIdentification:
          type: object
          properties:
            code:
              type: string
              nullable: false
              description: Employer identification code.
              example: ORST
            description:
              type: string
              nullable: false
              description: Description of employer identification code
        earningCode:
          type: object
          properties:
            shift:
              type: string
              nullable: false
              description: Shift code used as a default on timesheet for earnCode.
            shortDescription:
              type: string
              nullable: false
              description: Short description of earn code
            longDescription:
              type: string
              nullable: false
              description: Long description of earn code
        retirement:
          type: object
          properties:
            description:
              type: string
              nullable: true
              description: Description of retirement code
        i9Form:
          type: object
          properties:
            description:
              type: string
              nullable: true
              description: Description of i9Form code
        laborDistribution:
          type: array
          items:
            properties:
              title:
                type: string
                nullable: false
                description: The hierarchy description or title appropriate for this level
        classifiedInd:
          type: boolean
          nullable: false
          description: Indicates if this assignment is a civil service job
    JobId:
      type: string
      description: Uniquely identifies a job record for the given person.
      example: C12345-00
    JobResource:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/JobId'
        type:
          $ref: '#/components/schemas/JobType'
        links:
          $ref: '#/components/schemas/SelfLink'
        attributes:
          allOf:
            - $ref: '#/components/schemas/JobPostAttributes'
            - $ref: '#/components/schemas/JobAttributes'
    JobSetResult:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/SelfLink'
        data:
          type: array
          items:
            $ref: '#/components/schemas/JobResource'
    JobResult:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/SelfLink'
        data:
          $ref: '#/components/schemas/JobResource'
    JobPostBody:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          properties:
            type:
              $ref: '#/components/schemas/JobType'
            attributes:
              allOf:
                - $ref: '#/components/schemas/JobPostAttributes'
                - $ref: '#/components/schemas/JobPostRequired'
    JobPatchBody:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
            - type
          additionalProperties: false
          properties:
            id:
              $ref: '#/components/schemas/JobId'
            type:
              $ref: '#/components/schemas/JobType'
            attributes:
              $ref: '#/components/schemas/JobPostAttributes'
    SsnPostAttributes:
      type: object
      required:
        - ssn
      additionalProperties: false
      properties:
        ssn:
          type: string
          nullable: false
          description: 9 digits SSN
          pattern: ^\d{9}$
          example: '123456789'
    SsnPostBody:
      type: object
      required:
        - data
      additionalProperties: false
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          additionalProperties: false
          properties:
            type:
              $ref: '#/components/schemas/SsnType'
            attributes:
              $ref: '#/components/schemas/SsnPostAttributes'
    MealPlanAttributes:
      type: object
      properties:
        mealPlan:
          type: string
          nullable: false
          description: Description of meal plan
          example: Orange Rewards
        balance:
          type: number
          format: float
          nullable: false
          description: Remaining balance on meal plan in USD.
          example: 3.5
        lastUsed:
          type: object
          properties:
            dateTime:
              type: string
              format: date-time
              nullable: false
              description: The last time the meal plan was used.
              example: '2017-07-14T16:45:15Z'
            location:
              type: string
              description: Description of the place the meal plan was last used.
              nullable: false
              example: Java II
    MealPlanResource:
      type: object
      properties:
        id:
          type: string
          description: Meal plan ID
          example: '26'
        type:
          $ref: '#/components/schemas/MealPlanType'
        links:
          $ref: '#/components/schemas/SelfLink'
        attributes:
          $ref: '#/components/schemas/MealPlanAttributes'
    MealPlanResult:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/SelfLink'
        data:
          $ref: '#/components/schemas/MealPlanResource'
    MealPlanSetResult:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/SelfLink'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MealPlanResource'
    AddressPostRequired:
      type: object
      required:
        - addressType
        - city
      properties:
        postalCode:
          nullable: false
        addressType:
          type: object
          required:
            - code
    AddressPostAttributes:
      type: object
      properties:
        addressType:
          type: object
          properties:
            code:
              type: string
              nullable: false
              enum: *addressTypeEnums
              description: Code for the type of address record.
        addressLine1:
          type: string
          nullable: true
          example: 123 Main Street
        addressLine2:
          type: string
          nullable: true
          example: Apartment 4
        addressLine3:
          type: string
          nullable: true
        addressLine4:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
          example: '620'
        city:
          type: string
          nullable: false
          example: Corvallis
        stateCode:
          type: string
          nullable: false
          enum: *stateCodeEnums
          description: State code/abbreviation. This could also represent a province.
          example: OR
        postalCode:
          type: string
          example: '97331'
        countyCode:
          type: string
          nullable: true
          example: '41003'
        nationCode:
          type: string
          nullable: true
          enum: *nationCodeEnums
          description: Code for the nation of the address
    AddressAttributes:
      type: object
      properties:
        addressType:
          type: object
          properties:
            description:
              type: string
              nullable: true
              description: Short description of the address type.
              example: Current Mailing
        state:
          type: string
          nullable: true
          description: Human readable state code. This could also represent a province.
          example: Oregon
        county:
          type: string
          nullable: true
          description: Human readable county.
          example: Benton
        postalCode:
          nullable: true
        nation:
          type: string
          nullable: true
          description: Human readable nation/country name.
          example: Albania
        lastModified:
          type: string
          format: date
          nullable: false
          description: The date this address record was last modified.
          example: '1970-01-01'
    AddressResource:
      type: object
      properties:
        id:
          type: string
          description: Globally unique ID for the address
        type:
          $ref: '#/components/schemas/AddressType'
        links:
          $ref: '#/components/schemas/SelfLink'
        attributes:
          allOf:
            - $ref: '#/components/schemas/AddressPostAttributes'
            - $ref: '#/components/schemas/AddressAttributes'
    AddressSetResult:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/SelfLink'
        data:
          type: array
          items:
            $ref: '#/components/schemas/AddressResource'
    AddressResult:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/SelfLink'
        data:
          $ref: '#/components/schemas/AddressResource'
    AddressPostBody:
      type: object
      required:
        - data
      additionalProperties: false
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          additionalProperties: false
          properties:
            type:
              $ref: '#/components/schemas/AddressType'
            attributes:
              allOf:
                - $ref: '#/components/schemas/AddressPostRequired'
                - $ref: '#/components/schemas/AddressPostAttributes'
    PhonePostRequired:
      type: object
      required:
        - addressType
        - phoneType
        - areaCode
        - phoneNumber
        - primaryInd
      properties:
        phoneNumber:
          nullable: false
    PhonePostAttributes:
      type: object
      additionalProperties: false
      properties:
        areaCode:
          type: string
          nullable: true
          description: Area code for the phone number.
          example: '541'
          pattern: ^[0-9]{1,3}$
        phoneNumber:
          type: string
          description: Extension for the phone number. Can be returned in different formats.
          example: '4443333'
          pattern: ^[0-9]{1,7}$
        phoneExtension:
          type: string
          nullable: true
          description: Extension for the phone number. Can be returned in different formats.
          example: '20'
          pattern: ^[0-9]{1,4}$
        primaryInd:
          type: boolean
          nullable: false
          description: Indicates if this phone number is marked as the primary number.
        phoneType:
          type: object
          properties:
            code:
              type: string
              nullable: false
              description: Enum marking which type of address this phone number matches with.
              enum: *phoneTypeEnums
        addressType:
          type: object
          properties:
            code:
              type: string
              nullable: false
              description: Enum marking which type of address this phone number matches with.
              enum: *addressTypeEnums
    PhoneAttributes:
      type: object
      properties:
        phoneNumber:
          nullable: true
        fullPhoneNumber:
          type: string
          nullable: false
          description: Combination of area code and phone number.
          example: '5414443333'
        phoneType:
          type: object
          properties:
            description:
              type: string
              nullable: false
              description: Describes the phone type enum.
              example: Current
        addressType:
          type: object
          properties:
            description:
              type: string
              nullable: false
              description: Describes the address type enum.
              example: Current Mailing
        lastModified:
          type: string
          format: date
          nullable: false
          description: The date of the most recent change made to this record.
          example: '2015-10-19'
    PhoneResource:
      type: object
      properties:
        id:
          type: string
          description: Globally unique ID for the phone
        type:
          $ref: '#/components/schemas/PhoneType'
        links:
          $ref: '#/components/schemas/SelfLink'
        attributes:
          allOf:
            - $ref: '#/components/schemas/PhonePostAttributes'
            - $ref: '#/components/schemas/PhoneAttributes'
    PhoneSetResult:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/SelfLink'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PhoneResource'
    PhoneResult:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/SelfLink'
        data:
          $ref: '#/components/schemas/PhoneResource'
    PhonePostBody:
      type: object
      required:
        - data
      additionalProperties: false
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          additionalProperties: false
          properties:
            type:
              $ref: '#/components/schemas/PhoneType'
            attributes:
              allOf:
                - $ref: '#/components/schemas/PhonePostRequired'
                - $ref: '#/components/schemas/PhonePostAttributes'
    EmailPostAttributes:
      type: object
      required:
        - emailType
        - emailAddress
      additionalProperties: false
      properties:
        emailType:
          type: object
          properties:
            code:
              type: string
              nullable: false
              enum: *emailTypeEnums
              description: |
                Type of email
                - `STU` - Non-directory Student
                - `ONID` - Student
                - `VEND` - Vendor
                - `VWEB` - Vendor
                - `EMPL` - Employee
                - `VPAY` - Vendor Pay
                - `EMER` - Emergency Contact Persons Email for Student
            description:
              type: string
              nullable: false
              description: Description of email code
        emailAddress:
          type: string
          format: email
          nullable: false
          description: Email address for a person
          example: john.smith@example.com
        comment:
          type: string
          nullable: true
          description: Comment associated with this email
        preferredInd:
          type: boolean
          nullable: false
          description: Indicator for a preferred email
        displayWebInd:
          type: boolean
          nullable: false
          description: Indicates if an email can be displayed on public web pages
    EmailAttributes:
      type: object
      additionalProperties: false
      properties:
        lastActivityDate:
          type: string
          format: date
          nullable: false
          description: Date of last activity for this email
          example: '1970-01-01'
    EmailPostBody:
      type: object
      required:
        - data
      additionalProperties: false
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          additionalProperties: false
          properties:
            type:
              $ref: '#/components/schemas/EmailType'
            attributes:
              $ref: '#/components/schemas/EmailPostAttributes'
    EmailResource:
      type: object
      properties:
        id:
          type: string
          description: Unique ID for an email address
          example: '918179'
        type:
          $ref: '#/components/schemas/EmailType'
        links:
          $ref: '#/components/schemas/SelfLink'
        attributes:
          allOf:
            - $ref: '#/components/schemas/EmailPostAttributes'
            - $ref: '#/components/schemas/EmailAttributes'
    EmailSetResult:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/SelfLink'
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmailResource'
    EmailResult:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/SelfLink'
        data:
          $ref: '#/components/schemas/EmailResource'
    SelfLink:
      type: object
      properties:
        self:
          type: string
          format: uri
          description: Self link of resource
    ErrorObject:
      type: object
      properties:
        status:
          type: string
          description: HTTP status code
          example: '123'
        title:
          type: string
          description: A short, user readable summary of the error
          example: Not Found
        code:
          type: string
          description: An application-specific error code
          example: '1234'
        detail:
          type: string
          description: A long description of the error that may contain instance-specific
            details
        links:
          type: object
          properties:
            about:
              type: string
              format: uri
              description: A link to further information about the error
              example: https://developer.oregonstate.edu/documentation/error-reference#1234
    ErrorResult:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorObject'
