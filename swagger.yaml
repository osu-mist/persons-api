swagger: '2.0'
info:
  title: Persons API
  description: Get information about people at OSU.
  version: "1.0.0"
  license:
    name: GNU Affero General Public License Version 3
    url: http://www.gnu.org/licenses/agpl-3.0.en.html
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/persons-api
host: api.oregonstate.edu
schemes:
  - https
basePath: /v1
produces:
  - application/json
consumes:
  - application/json
paths:
  /persons:
    get:
      description: Get general personal information, query by various identifiers
      tags:
        - persons
      operationId: getPersons
      parameters:
        - in: query
          name: onid
          required: false
          description: ONID login name
          type: string
        - in: query
          name: osuID
          required: false
          description: >
            OSU ID of one or more persons. Multiple IDs can be retrieved
            in a single request by separating with a comma. IDs that are not
            able to be found will not be returned in the response.
            Example: /persons?osuID=1,2,3
          type: array
          items:
            type: string
          collectionFormat: csv
        - in: query
          name: osuUID
          required: false
          description: OSUUID of a person. Public identifier given in Directory API
          type: number
          format: integer
        - in: query
          name: firstName
          required: false
          description: First name of a person, for fuzzy name searching.
          type: string
        - in: query
          name: lastName
          required: false
          description: Last name of a person, for fuzzy name searching.
          type: string
        - in: query
          name: searchOldNames
          required: false
          default: false
          description: If true, searching by name will also search old names associated with the person.
          type: boolean
        - in: query
          name: searchOldOsuIDs
          required: false
          default: false
          description: If true, searching by OSU ID will also search old OSU ID's associated with the person.
          type: boolean
        - $ref: '#/parameters/pretty'
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/PersonResultObject'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Create a person
      tags:
        - persons
      operationId: postPerson
      parameters:
        - name: person
          in: body
          description: Result object for a person
          required: true
          schema:
            $ref: '#/definitions/NewPersonResultObject'
        - $ref: '#/parameters/pretty'
        - $ref: '#/parameters/authorization'
      responses:
        202:
          # The backend data source needs to do additional processing with the new person record.
          # Return a 202 to indicate the record was accepted but not yet created.
          description: Person record accepted.
          schema:
            $ref: '#/definitions/JobResultObject'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorArray'
  /persons/{osuID}:
    get:
      description: Get general person information
      tags:
        - persons
      operationId: getPersonByID
      parameters:
        - $ref: '#/parameters/osuID'
        - $ref: '#/parameters/pretty'
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/PersonResultObject'
        404:
          description: Person not found
          schema:
            $ref: '#/definitions/Error'
  /persons/{osuID}/jobs:
    get:
      description: Get jobs associated with a person
      tags:
        - jobs
      operationId: getJobs
      parameters:
        - name: positionNumber
          in: query
          type: string
          description: Filter by position ID.
          required: false
        - name: suffix
          in: query
          type: string
          description: |
            Filter by suffix. The suffix is used to differentiate multiple jobs
            that share the same position number for a given person.
          required: false
        - $ref: '#/parameters/osuID'
        - $ref: '#/parameters/pretty'
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/JobsResultObject'
        404:
          description: Person not found
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Create a job record for a person
      tags:
        - jobs
      operationId: postJob
      parameters:
        - name: job
          in: body
          description: Result object for a job
          required: true
          schema:
            $ref: '#/definitions/NewJobResultObject'
        - $ref: '#/parameters/employmentType'
        - $ref: '#/parameters/osuID'
        - $ref: '#/parameters/pretty'
        - $ref: '#/parameters/authorization'
      responses:
        202:
          # The backend data source needs to do additional processing with the new job record.
          # Return a 202 to indicate the record was accepted but not yet created.
          description: Job record accepted.
          schema:
            $ref: '#/definitions/JobResultObject'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorArray'
        404:
          description: Person not found
          schema:
            $ref: '#/definitions/Error'
  /persons/{osuID}/jobs/{jobID}:
    get:
      description: Get a specific job associated with a person.
      tags:
        - jobs
      operationId: getJob
      parameters:
        - $ref: '#/parameters/jobID'
        - $ref: '#/parameters/osuID'
        - $ref: '#/parameters/pretty'
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/JobResultObject'
        404:
          description: Person or job not found
          schema:
            $ref: '#/definitions/Error'
    put:
      description: Update a job record for a person
      tags:
        - jobs
      operationId: putJob
      parameters:
        - name: job
          in: body
          description: Result object for a job
          required: true
          schema:
            $ref: '#/definitions/NewJobResultObject'
        - $ref: '#/parameters/employmentType'
        - $ref: '#/parameters/jobID'
        - $ref: '#/parameters/osuID'
        - $ref: '#/parameters/pretty'
        - $ref: '#/parameters/authorization'
      responses:
        202:
          # The backend data source needs to do additional processing with the new job record.
          # Return a 202 to indicate the record was accepted but not yet created.
          description: Job record accepted.
          schema:
            $ref: '#/definitions/JobResultObject'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorArray'
        404:
          description: Person or job not found
          schema:
            $ref: '#/definitions/Error'
  /persons/{osuID}/ssn:
    post:
      description: Create person's SSN
      tags:
        - ssn
      operationId: postSSN
      parameters:
        - name: ssn
          in: body
          description: Result object for an SSN
          required: true
          schema:
            $ref: '#/definitions/NewSSNResultObject'
        - $ref: '#/parameters/osuID'
        - $ref: '#/parameters/pretty'
        - $ref: '#/parameters/authorization'
      responses:
        202:
          description: SSN record accepted.
          schema:
            $ref: '#/definitions/SSNResultObject'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorArray'
        404:
          description: Person not found
          schema:
            $ref: '#/definitions/Error'
  /persons/{osuID}/image:
    get:
      description: |
        Get an ID card image for a person. If the person exists but doesn't have
        an ID card image, a default image will be returned.
      tags:
        - images
      operationId: getImage
      produces:
        - image/jpeg
        - application/json
      parameters:
        - in: query
          name: width
          description: Resizes image to a pixel value for width while keeping original aspect ratio
          required: false
          type: integer
        - $ref: '#/parameters/osuID'
        - $ref: '#/parameters/pretty'
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: Successful response
          schema:
            type: file
          headers:
              Content-type:
                type: string
                description: image/jpeg
        404:
          description: Person not found
          schema:
            $ref: '#/definitions/Error'
  /persons/{osuID}/meal-plans:
    get:
      description: Get meal plans for a person
      tags:
        - meal-plans
      operationId: getMealPlans
      parameters:
        - $ref: '#/parameters/osuID'
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/MealPlansResultObject'
        404:
          description: Person not found
          schema:
            $ref: '#/definitions/Error'
  /persons/{osuID}/meal-plans/{mealPlanID}:
    get:
      description: Get meal plans for a person
      tags:
        - meal-plans
      operationId: getMealPlanByID
      parameters:
        - in: path
          name: mealPlanID
          description: ID of meal plan
          required: true
          type: string
        - $ref: '#/parameters/osuID'
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/MealPlanResultObject'
        404:
          description: Person or meal plan not found
          schema:
            $ref: '#/definitions/Error'
  /persons/{osuID}/addresses:
    get:
      description: Get addresses for a person
      tags:
        - addresses
      operationId: getAddresses
      parameters:
        - in: query
          name: addressType
          description: |
            Filter by address type. Common address types and their descriptions:
            - "CM" - Current Mailing
            - "PA" - Student Alternate Contact
            - "DM" - Department (US Mail)
            - "RK" - Financial Aid Address
            - "RH" - Residence Hall
          required: false
          type: string
        - $ref: '#/parameters/osuID'
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/AddressesResultObject'
        404:
          description: Person not found
          schema:
            $ref: '#/definitions/Error'
parameters:
  osuID:
    name: osuID
    in: path
    required: true
    description: OSU ID of person
    type: string
  jobID:
    name: jobID
    in: path
    description: ID of the specific job to be updated
    required: true
    type: string
  employmentType:
    name: employmentType
    in: query
    description: The type of employment that the job record should be processed as.
    required: true
    type: string
    enum: [student, graduate]
  pretty:
    name: pretty
    in: query
    type: boolean
    required: false
    description: If true, JSON response will be pretty-printed
  authorization:
    name: Authorization
    in: header
    type: string
    required: true
    description: '"Bearer [token]" where [token] is your OAuth2 access token'
definitions:
  NewPersonResultObject:
    properties:
      data:
        $ref: "#/definitions/NewPersonResourceObject"
  NewPersonResourceObject:
    properties:
      type:
        $ref: "#/definitions/PersonType"
      attributes:
        required:
        - firstName
        - lastName
        - birthDate
        - sexCode
        properties:
          firstName:
            type: string
            description: Preferred first name
          lastName:
            type: string
            description: Preferred last name
          middleName:
            type: string
            description: Preferred middle name
          birthDate:
            type: string
            format: date
            description: Birth date
            example: "1995-01-20"
          citizenCode:
            type: string
            enum: [FN, N, R, S, C]
            description: |
              Person's citzen code
              - "FN" - Foreign National
              - "N" - Non Resident Alien
              - "R" - Resident Alien
              - "S" - Substantial Presence Alien
              - "C" - Citizen
          sexCode:
            type: string
            enum: [M, F, N]
            description: |
              Person's sex code
              - "M" - Male
              - "F" - Female
              - "N" - Non-specified
  PersonResultObject:
    properties:
      data:
        properties:
          id:
            type: string
            description: 9 digit OSU ID
          type:
            $ref: "#/definitions/PersonType"
          links:
            $ref: "#/definitions/SelfLink"
          attributes:
            properties:
              username:
                type: string
                description: ONID login name
              osuUID:
                type: number
                format: integer
                description: Unique identifier in the Directory API
              firstName:
                type: string
                description: Preferred first name
              middleName:
                type: string
                description: Preferred middle name
              lastName:
                type: string
                description: Preferred last name
              previousRecords:
                type: array
                description: Previous records associated with the person
                items:
                  properties:
                    osuID:
                      type: string
                      description: 9 digit OSU ID
                      example: "931234567"
                    firstName:
                      type: string
                      description: Previous first name
                    middleName:
                      type: string
                      description: Previous middle name
                    lastName:
                      type: string
                      description: Previous last name
              email:
                type: string
                description: Primary email address
              birthDate:
                type: string
                format: date
                description: Birth date
              confidential:
                type: boolean
                description: If true, the person has opted in to being required to be listed as confidential
              currentStudent:
                type: boolean
                description: If true, the person is a current student
              currentEmployee:
                type: boolean
                description: If true, the person is a current employee
              employeeStatus:
                type: string
                enum: ['A', 'B', 'L', 'F', 'P', 'T']
                description: >
                  The status of the employee:
                  A - Active
                  B - Leave without pay and with benefits
                  L - Leave without pay and without benefits
                  F - Leave with pay and with benefits
                  P - Leave with partial pay and with benefits
                  T - Terminated
              primaryPhone:
                type: string
                description: E.164 formatted phone number.
              homePhone:
                type: string
                description: E.164 formatted phone number.
              alternatePhone:
                type: string
                description: E.164 formatted phone number.
              mobilePhone:
                type: string
                description: E.164 formatted phone number. Capable of SMS communication.
              ssnStatus:
                type: string
                description: SSN status
                enum:
                  - vault
                  - valid
                  - invalid
  JobsResultObject:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/JobResourceObject"
  JobResultObject:
    properties:
      data:
        $ref: "#/definitions/JobResourceObject"
  NewJobResultObject:
    properties:
      data:
        $ref: "#/definitions/NewJobResourceObject"
  JobResourceObject:
    properties:
      id:
        type: string
        description: Uniquely identifies a job record for the given person.
        example: C12345-00
      type:
        $ref: "#/definitions/JobType"
      links:
        $ref: "#/definitions/SelfLink"
      attributes:
        $ref: "#/definitions/JobAttributes"
  NewJobResourceObject:
    properties:
      type:
        $ref: "#/definitions/JobType"
      attributes:
        $ref: "#/definitions/JobAttributes"
  JobAttributes:
    required:
      - positionNumber
      - beginDate
      - supervisorOsuID
      - supervisorPositionNumber
      - effectiveDate
    properties:
      positionNumber:
        type: string
        description: Identifies a position
        example: C12345
      suffix:
        type: string
        # TODO: find a better way to describe different required fields for
        # a given set of attributes. Suffix is required for PUT but not POST.
        description: |
          Used to uniquely identify a job record for persons who have
          multiple jobs that share the same position number.
          For updating existing jobs, this field is required.
      effectiveDate:
        type: string
        format: date
        description: The date this job assignment is effective.
        example: "2018-12-31"
      beginDate:
        type: string
        format: date
        description: Begin date of job.
        example: "2018-12-31"
      endDate:
        type: string
        format: date
        description: End date of job.
        example: "2019-01-01"
      accruesLeave:
        type: boolean
        description: If true, the job accrues leave.
      contractBeginDate:
        type: string
        format: date
        description: The date the contract begins.
        example: "2018-12-31"
      contractEndDate:
        type: string
        format: date
        description: The date the contract ends.
        example: "2018-12-31"
      contractType:
        type: string
        description: Contract type code/ID.
      locationID:
        type: string
        description: Location ID of where job will be performed.
      status:
        type: string
        description: Job status
        enum:
          - Active
          - Leave without pay but with benefits
          - Leave without pay and benefits
          - Leave with full pay and benefits
          - Leave with partial pay and benefits
          - Terminated
        example: Active
      description:
        type: string
        description: Description of job
      personnelChangeDate:
        type: string
        format: date
        description: Date the last change was made to the job record.
        example: "2018-12-31"
      changeReasonCode:
        type: string
        description: The reason the last change was made to the job record.
      fullTimeEquivalency:
        type: number
        format: float
        description: Full time eqivalency where full time = 1
        example: 0.49
      appointmentPercent:
        type: number
        format: float
        description: FTE presented as a whole percentage.
        example: 49
      salaryStep:
        type: string
        format: integer
        example: "1"
      salaryGroupCode:
        type: string
      strsAssignmentCode:
        type: string
      supervisorOsuID:
        type: string
        description: OSU ID of the supervisor for the job.
      supervisorLastName:
        type: string
        description: Last name of the supervisor for the job.
      supervisorFirstName:
        type: string
        description: First name of the supervisor for the job.
      supervisorEmail:
        type: string
        description: The primary email of the supervisor for the job.
      supervisorPositionNumber:
        type: string
        description: Position number of the supervisor.
      supervisorSuffix:
        type: string
        description: Suffix of the supervisor
      timesheetOrganizationCode:
        type: string
        description: Organization code where time sheet is sent for this job.
      timesheetOrganizationDesc:
        type: string
        description: Organization title where time sheet is sent for this job.
      timesheetOrganizationPredCode:
        type: string
        description: The next higher organizational code of the current timesheet organization.
      timesheetOrganizationPredDesc:
        type: string
        description: The next higher organizational title of the current timesheet organization.
      homeOrganizationCode:
        type: string
        description: The home organization code of the employee.
      homeOrganizationDesc:
        type: string
        description: The home organization title of the employee.
      homeOrganizationPredCode:
        type: string
        description: The next higher organizational code of the current home organization.
      homeOrganizationPredDesc:
        type: string
        description: The next higher organizational title of the current home organization.
      hourlyRate:
        type: number
        format: float
        description: Hourly rate of job
        example: 12.85
      hoursPerPay:
        type: number
        format: float
        description: Hours per payment for job.
        example: 173.33
      assignmentSalary:
        type: number
        format: float
        description: The salary to be paid each pay period.
        example: 1670.83
      paysPerYear:
        type: number
        format: float
        description: The number of pays per calendar year.
      employeeClassificationCode:
        type: string
      employerCode:
        type: string
        description: Employer identification code.
      annualSalary:
        type: number
        format: float
        example: 20050.35
      earnCodeEffectiveDate:
        type: string
        format: date
        description: The date the earnCode became effective for this job.
        example: "2018-12-31"
      earnCode:
        type: string
        description: Default earnings code attached to the job and used on timesheet.
      earnCodeHours:
        type: number
        format: float
        description: Hours/units defaulted on timesheets for earnCode.
      earnCodeShift:
        type: string
        description: Shift code used as a default on timesheet for earnCode.
      useTemporarySSN:
        type: boolean
        description: When creating or updating a job, this field indicates the employee needs a temporary social security number assigned.
      employeeInformationRelease:
        type: boolean
        description: Indicates the employee has consented to having their employment information shared.
      salaryInformationRelease:
        type: boolean
        description: Indicates the employee has consented to having their salary information shared.
      salaryInformationReleaseDate:
        type: string
        format: date
        description: The date that the employee accepted or denied to have their salary information shared.
      retirementCode:
        type: string
      i9FormCode:
        type: string
        description: |
          Code to indicate the status of the employee's I9 form.
          Possible values: R - Received, N - Not received, T - Temporary, E - Exempt.
        enum: [R, N, T, E]
      i9Date:
        type: string
        format: date
        description: The date that the I9 form was received.
      i9ExpirationDate:
        type: string
        format: date
        description: The date the I9 form expires.
      laborDistribution:
        type: array
        items:
          required:
            - effectiveDate
            - accountIndexCode
            - distributionPercent
          properties:
            effectiveDate:
              type: string
              format: date
              description: Date this labor distribution becomes effective.
              example: "2018-12-31"
            accountIndexCode:
              type: string
              example: ABC123
            fundCode:
              type: string
            organizationCode:
              type: string
            accountCode:
              type: string
            programCode:
              type: string
            activityCode:
              type: string
            locationCode:
              type: string
            distributionPercent:
              type: number
              format: float
              description: Percentage of labor applied to this fund.
              example: 49.9
  PersonType:
    type: string
    example: person
  JobType:
    type: string
    example: job
  SSNType:
    type: string
    example: ssn
  MealPlansResultObject:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/MealPlanResourceObject"
  MealPlanResultObject:
    properties:
      data:
        $ref: "#/definitions/MealPlanResourceObject"
  MealPlanResourceObject:
    properties:
      id:
        type: string
        description: Meal plan ID
      type:
        type: string
        example: meal-plans
      links:
          $ref: "#/definitions/SelfLink"
      attributes:
        properties:
          mealPlan:
            type: string
            description: Description of meal plan
            example: Orange Rewards
          balance:
            type: number
            format: float
            description: Remaining balance on meal plan in USD
            example: 23.8
          lastUsedDate:
            type: string
            format: date-time
            description: The last time the meal plan was used
            example: "2017-07-14T16:45:15Z"
          lastUsedLocation:
            type: string
            description: Description of place the meal plan was last used
            example: "Java II"
  AddressesResultObject:
    properties:
      data:
        type: array
        items:
          properties:
            id:
              type: string
              description: Globally unique ID for the address.
            type:
              type: string
              example: addresses
            attributes:
              properties:
                addressType:
                  type: string
                  description: Code for the type of address record.
                  example: CM
                addressTypeDescription:
                  type: string
                  description: Short description of the address type.
                  example: Current Mailing
                addressLine1:
                  type: string
                  example: "123 Main Street"
                addressLine2:
                  type: string
                  example: "Apartment 123"
                addressLine3:
                  type: string
                addressLine4:
                  type: string
                houseNumber:
                  type: string
                city:
                  type: string
                stateCode:
                  type: string
                  description: State code/abbreviation. This could also represent a province.
                  example: "OR"
                state:
                  type: string
                  description: Human readable state code. This could also represent a province.
                  example: "Oregon"
                postalCode:
                  type: string
                  example: "97331"
                countyCode:
                  type: string
                  example: "41003"
                county:
                  type: string
                  description: Human readable county.
                  example: "Benton"
                nationCode:
                  type: string
                nation:
                  type: string
                  description: Human readable nation/country name.
                lastModified:
                  type: string
                  format: date
                  description: The date this address record was last modified.
  NewSSNResultObject:
    properties:
      data:
        properties:
          type:
            $ref: "#/definitions/SSNType"
          attributes:
            required:
              - ssn
            properties:
              ssn:
                type: string
                pattern: '\d{9}'
  SSNResultObject:
    properties:
      id:
        type: string
        description: 9 digits SSN
        example: '123456789'
      type:
        $ref: "#/definitions/SSNType"
      links:
        $ref: "#/definitions/SelfLink"
      attributes:
        properties:
          ssn:
            type: string
            description: 9 digits SSN
            example: '123456789'
  SelfLink:
    properties:
      self:
        type: string
        format: url
        description: Self link of resource
  ErrorArray:
    type: array
    items:
      $ref: "#/definitions/Error"
  Error:
    properties:
      status:
        type: integer
        description: HTTP status code.
      developerMessage:
        type: string
        description: An error string aimed at developers.
      userMesage:
        type: string
        description: An error string aimed at end users.
      code:
        type: integer
        description: Error code.
      details:
        type: string
        description: A link to further information about the error.
